{
    "patterns_by_concept_group": {
        "algorithms-functions-recursion-searching": {
            "backtracking": 12.0,
            "backtracking with state restoration": 1.0,
            "list": 9.0,
            "backtracking with Trie data structure": 1.0,
            "Trie for efficient word lookup": 1.0,
            "backtracking to explore paths": 1.0,
            "Trie": 3.0,
            "set": 8.0,
            "pruning invalid states": 1.0,
            "pruning using sets for columns and diagonals": 3.0,
            "pruning": 3.0,
            "sorting": 1.0,
            "duplicate skipping": 1.0,
            "backtracking with Trie": 2.0,
            "Trie data structure for efficient prefix searching": 1.0,
            "early termination on found words": 1.0,
            "pruning through early return on invalid placement": 1.0,
            "2D list": 3.0,
            "early stopping": 1.0,
            "sorting to handle duplicates": 2.0,
            "dynamic programming": 5.0,
            "precomputation of palindrome substrings": 1.0,
            "2D array": 2.0,
            "1D array": 2.0,
            "backtracking with trie": 2.0,
            "trie data structure to reduce search space": 1.0,
            "early termination on word found": 1.0,
            "trie": 2.0,
            "non-recursive state tracking": 1.0,
            "array": 4.0,
            "recursive backtracking": 1.0,
            "divide and conquer": 1.0,
            "tree": 1.0,
            "pruning with leading zero check": 1.0,
            "iterative dp approach": 1.0,
            "state reduction": 1.0,
            "trie for prefix matching": 1.0,
            "early stopping on non-matching paths": 1.0,
            "backtracking with bit manipulation": 1.0,
            "bit manipulation for state representation": 1.0,
            "pruning invalid states early": 1.0,
            "bitmask": 1.0,
            "tabulation": 2.0,
            "early termination": 1.0,
            "precomputation of palindromic substrings": 1.0,
            "iterative dynamic programming": 1.0,
            "recursive backtracking with memoization": 1.0,
            "memoization": 1.0,
            "Trie for efficient prefix search": 1.0,
            "backtracking with pruning": 1.0,
            "pruning using used array": 1.0
        },
        "functions-recursion-searching-sorting": {
            "recursive sequence generation": 1.0,
            "iterative approach for sequence generation": 1.0,
            "list": 7.0,
            "grouping and hierarchical organization": 1.0,
            "sorting for grouping": 1.0,
            "recursive hierarchy building": 1.0,
            "defaultdict": 2.0,
            "nested dictionary": 1.0,
            "combinatorial generation and search": 1.0,
            "use of itertools.product for efficient combination generation": 1.0,
            "tuple": 1.0,
            "sorting and selection": 1.0,
            "avoid square root calculation": 1.0,
            "lexicographical sorting for ties": 1.0,
            "recursion and sorting": 1.0,
            "use of set for uniqueness": 1.0,
            "set": 2.0,
            "sorting and recursive binary search": 1.0,
            "divide and conquer in binary search": 1.0,
            "recursive sorting": 1.0,
            "divide and conquer": 1.0,
            "array": 1.0,
            "hashing with character frequency": 1.0,
            "character frequency tuple as hash key": 1.0,
            "sorting and interval merging": 1.0,
            "sorting for efficient merging": 1.0,
            "linear scan for merging": 1.0,
            "brute force with filtering": 1.0,
            "use of set to ensure uniqueness": 1.0
        },
        "algorithms-recursion": {
            "recursion": 1.0,
            "modular arithmetic": 1.0,
            "none": 1.0,
            "backtracking": 3.0,
            "palindrome checking": 1.0,
            "list": 2.0,
            "bit manipulation": 1.0,
            "bitmask": 1.0,
            "backtracking with Trie": 1.0,
            "Trie data structure for efficient prefix search": 1.0,
            "Trie": 1.0,
            "set": 1.0,
            "recursive tree generation": 1.0,
            "divide and conquer": 1.0
        },
        "conditionals-loops-recursion-searching": {
            "hashmap counting": 1.0,
            "early exit for empty input": 1.0,
            "defaultdict": 1.0,
            "frequency counting": 1.0,
            "use of dictionary for counting": 1.0,
            "dictionary": 2.0,
            "backtracking": 2.0,
            "pruning with palindrome check": 1.0,
            "list": 1.0,
            "iterative stack-based approach": 1.0,
            "early exit on mismatch": 1.0,
            "stack": 1.0,
            "backtracking to explore all paths": 1.0,
            "pruning by marking cells as visited": 1.0,
            "2D list (grid)": 1.0,
            "list (path)": 1.0,
            "breadth-first search (BFS)": 2.0,
            "early exit upon finding treasure": 1.0,
            "visited set to prevent cycles": 1.0,
            "deque": 2.0,
            "set": 3.0,
            "early exit upon finding the solution": 1.0,
            "backtracking with trie optimization": 1.0,
            "trie data structure for prefix searching": 1.0,
            "early termination in backtracking": 1.0,
            "trie": 1.0,
            "backtracking with bit manipulation": 1.0,
            "bit manipulation for efficient state tracking": 1.0,
            "pruning of invalid states early": 1.0,
            "bitmask": 1.0,
            "dynamic programming": 1.0,
            "precomputation of palindromic substrings": 1.0,
            "bottom-up approach": 1.0,
            "2D array": 1.0,
            "1D array": 1.0
        },
        "algorithms-dynamic_programming-recursion-sorting": {
            "dynamic programming": 8.0,
            "prefix sum for range sum calculation": 1.0,
            "2D array (DP table)": 1.0,
            "array": 4.0,
            "dynamic programming with bitmasking": 1.0,
            "bitmasking to represent task assignments": 1.0,
            "iterative DP table update": 1.0,
            "use of a set for O(1) lookups": 1.0,
            "bottom-up dynamic programming": 1.0,
            "set": 1.0,
            "preprocessing palindromic substrings": 1.0,
            "iterative DP table filling": 1.0,
            "2D array": 4.0,
            "1D array": 2.0,
            "in-place updates": 1.0,
            "tracking max/min products": 1.0,
            "variables": 2.0,
            "state reduction": 1.0,
            "iterative approach": 1.0,
            "precomputation of sums": 1.0,
            "iterative dynamic programming": 1.0,
            "bottom-up approach": 1.0,
            "precomputation of palindromes": 1.0,
            "precomputation of frequency sums": 1.0,
            "greedy algorithm": 1.0,
            "two-pass approach": 1.0
        },
        "algorithms-recursion-searching": {
            "breadth-first search (BFS)": 1.0,
            "state tracking with visited set": 1.0,
            "early exit upon reaching target": 1.0,
            "deque": 1.0,
            "set": 2.0,
            "recursive backtracking with trie": 1.0,
            "trie data structure to reduce search space": 1.0,
            "early termination when word is found": 1.0,
            "trie": 1.0,
            "backtracking": 2.0,
            "bit manipulation": 1.0,
            "boolean arrays": 2.0,
            "bitmask": 1.0,
            "pruning with leading zero check": 1.0,
            "list": 1.0,
            "dynamic programming": 1.0,
            "2D table for palindrome checking": 1.0,
            "1D table for minimum cuts": 1.0,
            "2D array": 1.0,
            "1D array": 1.0
        },
        "conditionals-dynamic_programming-error_handling-recursion": {
            "recursion with memoization": 4.0,
            "memoization to cache results of subproblems": 1.0,
            "set": 2.0,
            "dictionary": 4.0,
            "backtracking": 1.0,
            "pruning": 1.0,
            "early termination": 1.0,
            "2D array": 2.0,
            "dynamic programming with binary search": 1.0,
            "sorting": 2.0,
            "binary search for non-conflicting jobs": 1.0,
            "array": 2.0,
            "dynamic programming": 2.0,
            "precomputation of palindromes": 1.0,
            "iterative DP table filling": 1.0,
            "1D array": 1.0,
            "dynamic programming with memoization": 1.0,
            "list": 1.0,
            "dynamic programming with recursion": 2.0,
            "iterative approach": 1.0,
            "space optimization": 1.0,
            "memoization": 4.0,
            "2D list": 1.0,
            "set for fast lookup": 1.0
        },
        "algorithms-conditionals-error_handling": {
            "depth-first search (DFS)": 1.0,
            "backtracking": 1.0,
            "2D list": 1.0,
            "breadth-first search (BFS)": 2.0,
            "early stopping if target node is reached": 1.0,
            "defaultdict for adjacency list": 1.0,
            "deque for BFS queue": 1.0,
            "single pass greedy algorithm": 1.0,
            "tracking minimum price": 1.0,
            "conditional checks for fluctuations": 1.0,
            "variables": 1.0,
            "early exit on goal condition": 1.0,
            "use of teleportation points to reduce search space": 1.0,
            "deque": 1.0,
            "set": 1.0,
            "conditional checks": 1.0,
            "early error logging": 1.0,
            "list": 1.0
        },
        "algorithms-dynamic_programming-recursion": {
            "dynamic programming": 3.0,
            "tabulation": 1.0,
            "2D array": 2.0,
            "iterative approach": 1.0,
            "memoization": 1.0,
            "array": 1.0,
            "memoization with a 2D table": 1.0,
            "bottom-up approach": 1.0
        },
        "data_structures-error_handling-functions-recursion": {
            "recursion": 3.0,
            "tail recursion": 1.0,
            "list": 5.0,
            "stack-based validation": 1.0,
            "early exit on imbalance": 1.0,
            "stack": 2.0,
            "breadth-first search (BFS)": 1.0,
            "early exit upon reaching the target": 1.0,
            "using a queue for level-order traversal": 1.0,
            "deque": 1.0,
            "set": 4.0,
            "dictionary": 6.0,
            "recursive traversal": 1.0,
            "nonlocal variables for state tracking": 1.0,
            "recursive parsing": 1.0,
            "operator precedence handling": 1.0,
            "recursive descent parsing": 1.0,
            "iterative validation": 1.0,
            "single pass validation": 1.0,
            "use of sets for O(1) lookups": 1.0,
            "expression evaluation": 1.0,
            "string manipulation": 1.0,
            "index validation": 1.0,
            "string": 1.0,
            "depth-first search (DFS)": 1.0,
            "backtracking": 2.0,
            "2D list": 2.0,
            "early termination": 1.0,
            "recursive backtracking": 1.0,
            "recursive depth-first traversal": 1.0,
            "recursive validation": 1.0,
            "early exit on invalidity": 1.0,
            "expression tree construction and evaluation": 1.0,
            "recursive evaluation": 1.0,
            "stack-based tree construction": 1.0,
            "binary tree": 1.0,
            "early exit upon successful deletion": 1.0,
            "depth-first search (DFS) with recursion": 1.0,
            "backtracking to handle cycles": 1.0,
            "backtracking with trie": 1.0,
            "trie data structure for efficient prefix searching": 1.0,
            "backtracking to explore all paths": 1.0,
            "trie": 1.0
        },
        "data_structures-dynamic_programming-functions-sorting": {
            "two-pointer technique": 1.0,
            "linear merge": 1.0,
            "list": 1.0,
            "linear scan": 1.0,
            "single pass iteration": 1.0,
            "array": 3.0,
            "sorting": 1.0,
            "in-place sorting": 1.0,
            "set-based lookup": 1.0,
            "early termination": 1.0,
            "set for O(1) lookups": 1.0,
            "set": 1.0,
            "array manipulation": 1.0,
            "in-place modification": 1.0,
            "reversal algorithm": 1.0
        },
        "conditionals-data_structures-loops": {
            "dynamic programming": 2.0,
            "2D DP array": 1.0,
            "early return for edge case": 1.0,
            "2D array": 2.0,
            "Kadane's algorithm extension": 1.0,
            "prefix sum": 1.0,
            "1D Kadane's algorithm": 1.0,
            "array": 1.0,
            "prefix sum with hashmap": 1.0,
            "cumulative balance tracking": 1.0,
            "hashmap for quick lookups": 1.0,
            "hashmap": 1.0,
            "graph traversal with constraints": 1.0,
            "priority queue for maximum path tracking": 1.0,
            "early termination upon reaching destination": 1.0,
            "priority queue (max-heap)": 1.0,
            "dictionary": 1.0,
            "bottom-up approach": 1.0
        },
        "algorithms-conditionals-recursion-searching": {
            "recursive search": 1.0,
            "early return upon finding target": 1.0,
            "list": 2.0,
            "divide and conquer": 1.0,
            "binary search": 1.0,
            "recursive approach": 1.0,
            "2D array": 1.0,
            "depth-first search (DFS)": 2.0,
            "backtracking": 2.0,
            "2D grid (list of lists)": 1.0,
            "recursive DFS to explore paths": 1.0,
            "pruning invalid paths early": 1.0,
            "2D list": 1.0
        },
        "data_structures-functions-sorting": {
            "custom sorting": 1.0,
            "custom key function for sorting": 1.0,
            "dictionary": 1.0,
            "hashing": 1.0,
            "use of sorted string as a hash key": 1.0,
            "defaultdict": 1.0,
            "sorting with custom comparator": 1.0,
            "use of Counter for frequency counting": 1.0,
            "Counter (from collections)": 1.0,
            "list": 1.0
        },
        "conditionals-error_handling-sorting": {
            "comparison-based sorting with error checking": 1.0,
            "early exit on error detection": 1.0,
            "list": 5.0,
            "sorting with validation": 2.0,
            "custom sorting key": 1.0,
            "dictionary": 4.0,
            "early return on error detection": 1.0,
            "custom sorting with validation": 2.0,
            "early validation checks": 2.0,
            "use of sorting keys": 1.0,
            "preprocessing data for sorting": 1.0
        },
        "conditionals-data_structures-dynamic_programming-sorting": {
            "dynamic programming with stack": 1.0,
            "histogram representation": 1.0,
            "monotonic stack": 1.0,
            "array": 8.0,
            "stack": 1.0,
            "dynamic programming": 6.0,
            "iterative update of maximum product for subsequences": 1.0,
            "iterative approach": 2.0,
            "state transition": 1.0,
            "binary search for optimization": 2.0,
            "sorting tasks by end time": 1.0,
            "2D DP table to store intermediate results": 1.0,
            "2D array": 1.0,
            "dynamic programming with binary search": 1.0,
            "sorting": 2.0,
            "prefix sum with hashmap": 1.0,
            "cumulative sum tracking": 1.0,
            "hashmap for quick lookup": 1.0,
            "hashmap": 1.0,
            "binary search": 1.0,
            "binary search on answer": 1.0,
            "greedy partitioning": 1.0,
            "1D DP array": 1.0,
            "prefix sums for range sum calculation": 1.0,
            "2D array (DP table)": 1.0,
            "greedy algorithm": 1.0,
            "mathematical formula for scheduling": 1.0,
            "Counter from collections": 1.0,
            "sliding window": 2.0,
            "early termination for invalid subarrays": 1.0,
            "set": 1.0,
            "graph traversal and coloring": 1.0,
            "BFS for graph traversal": 1.0,
            "modular arithmetic for color assignment": 1.0,
            "defaultdict": 1.0,
            "deque": 1.0,
            "modified binary search with greedy approach": 1.0,
            "binary search for efficient position finding": 1.0,
            "list": 1.0,
            "two-pointer technique": 1.0
        },
        "algorithms-dynamic_programming-loops-searching": {
            "dynamic programming": 10.0,
            "use of dp array to store intermediate results": 1.0,
            "array": 7.0,
            "iterative update of dp array": 1.0,
            "iterative filling of dp table": 1.0,
            "2D array": 5.0,
            "bottom-up approach": 2.0,
            "iterative approach": 2.0,
            "state transition": 1.0,
            "greedy algorithm": 1.0,
            "tracking maximum reach": 1.0,
            "early stopping": 1.0,
            "recursive backtracking with memoization": 1.0,
            "memoization to avoid redundant calculations": 1.0,
            "set": 1.0,
            "dictionary": 2.0,
            "backtracking with depth-first search (DFS)": 1.0,
            "pruning by marking visited nodes": 1.0,
            "early termination when conditions are met": 1.0,
            "sliding window": 1.0,
            "dynamic window resizing": 1.0,
            "2D DP table": 1.0,
            "iterative filling": 1.0,
            "string manipulation with KMP algorithm": 1.0,
            "KMP algorithm for pattern matching": 1.0,
            "pre-sorting": 1.0,
            "cost calculation": 1.0,
            "precomputation of sums": 1.0,
            "2D array (DP table)": 1.0
        },
        "error_handling-functions-recursion": {
            "iteration": 1.0,
            "early exit on invalid input": 1.0,
            "dictionary": 2.0,
            "recursion": 2.0,
            "early termination on error": 1.0,
            "list": 2.0,
            "stack-based validation": 1.0,
            "early exit on mismatch": 1.0,
            "stack": 1.0,
            "backtracking": 1.0,
            "pruning using palindrome check": 1.0,
            "recursive traversal": 1.0
        },
        "algorithms-dynamic_programming-error_handling-sorting": {
            "dynamic programming": 7.0,
            "precomputation of costs": 1.0,
            "iterative filling of DP table": 1.0,
            "2D array (DP table)": 3.0,
            "greedy approach with linear scan": 1.0,
            "single pass with condition checks": 1.0,
            "local modification analysis": 1.0,
            "array": 5.0,
            "binary search with greedy partitioning": 1.0,
            "binary search": 1.0,
            "greedy validation": 1.0,
            "iterative DP table filling": 1.0,
            "2D array": 3.0,
            "dynamic programming with binary search": 1.0,
            "binary search for LIS": 1.0,
            "precomputation of LIS from both ends": 1.0,
            "2D DP table to track subsequence length with changes": 1.0,
            "state representation": 1.0,
            "transition optimization": 1.0,
            "dynamic programming table to track minimum fixes": 1.0,
            "early termination if fixes exceed k": 1.0,
            "state transition": 1.0,
            "cost minimization": 1.0,
            "backward iteration to prevent overwriting": 1.0,
            "use of sorted unique values to limit targets": 1.0
        },
        "conditionals-error_handling-searching-sorting": {
            "filtering and sorting": 11.0,
            "in-place sorting": 3.0,
            "list": 20.0,
            "dictionary": 13.0,
            "early filtering of ineligible students": 1.0,
            "early filtering": 3.0,
            "composite sorting keys": 1.0,
            "set for fast membership checking": 1.0,
            "set": 1.0,
            "conditional checks": 1.0,
            "conditional filtering": 1.0,
            "sorting by ID for consistent output": 1.0,
            "early return for invalid input": 1.0,
            "early return on error": 2.0,
            "conditional logic for query type": 1.0,
            "conditional filtering and sorting": 2.0,
            "conditional branching": 1.0,
            "early return": 1.0,
            "case-insensitive comparison": 1.0,
            "filter and sort": 2.0,
            "list comprehension for filtering": 6.0,
            "built-in sort for sorting": 1.0,
            "lambda function for sorting": 1.0,
            "built-in sort function": 1.0,
            "stable sort": 1.0,
            "filtering, sorting, and searching": 1.0,
            "binary search for efficient searching": 1.0,
            "filtering and binary search": 1.0,
            "binary search for efficient lookup": 3.0,
            "cleaning, custom sorting, binary search": 1.0,
            "custom sorting key": 1.0,
            "sorting and binary search": 1.0
        },
        "algorithms-error_handling-functions-recursion": {
            "recursive function calls": 1.0,
            "early return on error detection": 1.0,
            "dictionary": 2.0,
            "recursive traversal": 2.0,
            "avoid duplicates in file list": 1.0,
            "list": 4.0,
            "tail recursion": 2.0,
            "depth-first search (DFS)": 1.0,
            "backtracking": 1.0,
            "set": 1.0,
            "recursive evaluation": 1.0,
            "early return on error": 1.0
        },
        "data_structures-recursion-sorting": {
            "recursive merge sort": 1.0,
            "divide and conquer": 2.0,
            "recursive decomposition": 1.0,
            "list": 2.0,
            "quickselect algorithm": 1.0,
            "in-place partitioning": 1.0,
            "recursive divide and conquer": 1.0,
            "array": 1.0,
            "depth-first search (DFS) recursion": 1.0,
            "recursive depth tracking": 1.0,
            "recursive merging": 1.0,
            "binary merge": 1.0,
            "linked list": 1.0,
            "stack-based approach": 1.0,
            "use of stack to manage indices efficiently": 1.0,
            "stack": 1.0
        }
    },
    "patterns_by_difficulty": {
        "hard": {
            "backtracking": 5.5,
            "backtracking with state restoration": 1.0,
            "list": 11.0,
            "backtracking with Trie data structure": 1.0,
            "Trie for efficient word lookup": 1.0,
            "backtracking to explore paths": 1.0,
            "Trie": 2.0,
            "set": 3.6666666666666665,
            "pruning invalid states": 1.0,
            "pruning using sets for columns and diagonals": 2.0,
            "pruning": 3.0,
            "sorting": 1.0,
            "duplicate skipping": 1.0,
            "backtracking with Trie": 1.0,
            "Trie data structure for efficient prefix searching": 1.0,
            "early termination on found words": 1.0,
            "pruning through early return on invalid placement": 1.0,
            "2D list": 2.0,
            "early stopping": 1.0,
            "sorting to handle duplicates": 1.0,
            "dynamic programming": 5.0,
            "precomputation of palindrome substrings": 1.0,
            "2D array": 2.6666666666666665,
            "1D array": 3.0,
            "backtracking with trie": 2.0,
            "trie data structure to reduce search space": 1.0,
            "early termination on word found": 1.0,
            "trie": 2.0,
            "non-recursive state tracking": 1.0,
            "array": 4.0,
            "recursive backtracking": 1.0,
            "divide and conquer": 1.0,
            "tree": 1.0,
            "pruning with leading zero check": 1.0,
            "iterative dp approach": 1.0,
            "state reduction": 1.0,
            "trie for prefix matching": 1.0,
            "early stopping on non-matching paths": 1.0,
            "backtracking with bit manipulation": 1.0,
            "bit manipulation for state representation": 1.0,
            "pruning invalid states early": 1.0,
            "bitmask": 1.0,
            "tabulation": 1.0,
            "early termination": 1.0,
            "precomputation of palindromic substrings": 1.0,
            "iterative dynamic programming": 1.0,
            "prefix sum for range sum calculation": 1.0,
            "2D array (DP table)": 1.0,
            "dynamic programming with bitmasking": 1.0,
            "bitmasking to represent task assignments": 1.0,
            "iterative DP table update": 1.0,
            "use of a set for O(1) lookups": 1.0,
            "bottom-up dynamic programming": 1.0,
            "preprocessing palindromic substrings": 1.0,
            "iterative DP table filling": 1.0,
            "in-place updates": 1.0,
            "tracking max/min products": 1.0,
            "variables": 1.0,
            "iterative approach": 1.0,
            "memoization": 1.0,
            "memoization with a 2D table": 1.0,
            "bottom-up approach": 1.0,
            "recursion": 1.0,
            "tail recursion": 1.5,
            "stack-based validation": 1.0,
            "early exit on imbalance": 1.0,
            "stack": 1.0,
            "breadth-first search (BFS)": 1.0,
            "early exit upon reaching the target": 1.0,
            "using a queue for level-order traversal": 1.0,
            "deque": 1.0,
            "dictionary": 9.0,
            "recursive traversal": 1.5,
            "nonlocal variables for state tracking": 1.0,
            "recursive parsing": 1.0,
            "operator precedence handling": 1.0,
            "recursive descent parsing": 1.0,
            "greedy algorithm": 1.0,
            "tracking maximum reach": 1.0,
            "recursive backtracking with memoization": 1.0,
            "memoization to avoid redundant calculations": 1.0,
            "backtracking with depth-first search (DFS)": 1.0,
            "pruning by marking visited nodes": 1.0,
            "early termination when conditions are met": 1.0,
            "precomputation of costs": 1.0,
            "iterative filling of DP table": 1.0,
            "greedy approach with linear scan": 1.0,
            "single pass with condition checks": 1.0,
            "local modification analysis": 1.0,
            "binary search with greedy partitioning": 1.0,
            "binary search": 1.0,
            "greedy validation": 1.0,
            "dynamic programming with binary search": 1.0,
            "binary search for LIS": 1.0,
            "precomputation of LIS from both ends": 1.0,
            "filtering and sorting": 11.0,
            "in-place sorting": 3.0,
            "early filtering of ineligible students": 1.0,
            "early filtering": 3.0,
            "composite sorting keys": 1.0,
            "set for fast membership checking": 1.0,
            "conditional checks": 1.0,
            "conditional filtering": 1.0,
            "sorting by ID for consistent output": 1.0,
            "early return for invalid input": 1.0,
            "early return on error": 3.0,
            "conditional logic for query type": 1.0,
            "conditional filtering and sorting": 2.0,
            "conditional branching": 1.0,
            "early return": 1.0,
            "case-insensitive comparison": 1.0,
            "filter and sort": 2.0,
            "list comprehension for filtering": 6.0,
            "built-in sort for sorting": 1.0,
            "lambda function for sorting": 1.0,
            "built-in sort function": 1.0,
            "stable sort": 1.0,
            "filtering, sorting, and searching": 1.0,
            "binary search for efficient searching": 1.0,
            "filtering and binary search": 1.0,
            "binary search for efficient lookup": 3.0,
            "cleaning, custom sorting, binary search": 1.0,
            "custom sorting key": 1.0,
            "sorting and binary search": 1.0,
            "recursive function calls": 1.0,
            "early return on error detection": 1.0,
            "avoid duplicates in file list": 1.0,
            "depth-first search (DFS)": 1.0,
            "recursive evaluation": 1.0
        },
        "very hard": {
            "recursive sequence generation": 1.0,
            "iterative approach for sequence generation": 1.0,
            "list": 9.333333333333334,
            "grouping and hierarchical organization": 1.0,
            "sorting for grouping": 1.0,
            "recursive hierarchy building": 1.0,
            "defaultdict": 2.0,
            "nested dictionary": 1.0,
            "combinatorial generation and search": 1.0,
            "use of itertools.product for efficient combination generation": 1.0,
            "tuple": 1.0,
            "sorting and selection": 1.0,
            "avoid square root calculation": 1.0,
            "lexicographical sorting for ties": 1.0,
            "recursion and sorting": 1.0,
            "use of set for uniqueness": 1.0,
            "set": 5.666666666666667,
            "sorting and recursive binary search": 1.0,
            "divide and conquer in binary search": 1.0,
            "recursive sorting": 1.0,
            "divide and conquer": 2.5,
            "array": 6.333333333333333,
            "hashing with character frequency": 1.0,
            "character frequency tuple as hash key": 1.0,
            "sorting and interval merging": 1.0,
            "sorting for efficient merging": 1.0,
            "linear scan for merging": 1.0,
            "brute force with filtering": 1.0,
            "use of set to ensure uniqueness": 1.0,
            "recursive backtracking with memoization": 1.0,
            "memoization": 5.0,
            "2D list": 2.0,
            "backtracking": 5.0,
            "pruning using sets for columns and diagonals": 1.0,
            "backtracking with Trie": 2.0,
            "Trie for efficient prefix search": 1.0,
            "backtracking with pruning": 1.0,
            "Trie": 2.0,
            "sorting to handle duplicates": 1.0,
            "pruning using used array": 1.0,
            "dynamic programming": 8.333333333333334,
            "tabulation": 1.0,
            "recursion": 1.5,
            "modular arithmetic": 1.0,
            "none": 1.0,
            "palindrome checking": 1.0,
            "bit manipulation": 2.0,
            "bitmask": 3.0,
            "Trie data structure for efficient prefix search": 1.0,
            "recursive tree generation": 1.0,
            "hashmap counting": 1.0,
            "early exit for empty input": 1.0,
            "frequency counting": 1.0,
            "use of dictionary for counting": 1.0,
            "dictionary": 5.333333333333333,
            "pruning with palindrome check": 1.0,
            "iterative stack-based approach": 1.0,
            "early exit on mismatch": 1.0,
            "stack": 1.3333333333333333,
            "backtracking to explore all paths": 1.0,
            "pruning by marking cells as visited": 1.0,
            "2D list (grid)": 1.0,
            "list (path)": 1.0,
            "breadth-first search (BFS)": 5.0,
            "early exit upon finding treasure": 1.0,
            "visited set to prevent cycles": 1.0,
            "deque": 2.5,
            "early exit upon finding the solution": 1.0,
            "backtracking with trie optimization": 1.0,
            "trie data structure for prefix searching": 1.0,
            "early termination in backtracking": 1.0,
            "trie": 1.5,
            "backtracking with bit manipulation": 1.0,
            "bit manipulation for efficient state tracking": 1.0,
            "pruning of invalid states early": 1.0,
            "precomputation of palindromic substrings": 1.0,
            "bottom-up approach": 1.5,
            "2D array": 4.666666666666667,
            "1D array": 4.0,
            "state tracking with visited set": 1.0,
            "early exit upon reaching target": 1.0,
            "recursive backtracking with trie": 1.0,
            "trie data structure to reduce search space": 1.0,
            "early termination when word is found": 1.0,
            "boolean arrays": 2.0,
            "pruning with leading zero check": 1.0,
            "2D table for palindrome checking": 1.0,
            "1D table for minimum cuts": 1.0,
            "recursion with memoization": 4.0,
            "memoization to cache results of subproblems": 1.0,
            "pruning": 1.0,
            "early termination": 1.0,
            "dynamic programming with binary search": 1.0,
            "sorting": 2.0,
            "binary search for non-conflicting jobs": 1.0,
            "precomputation of palindromes": 2.0,
            "iterative DP table filling": 1.0,
            "dynamic programming with memoization": 1.0,
            "dynamic programming with recursion": 2.0,
            "iterative approach": 2.0,
            "space optimization": 1.0,
            "set for fast lookup": 1.0,
            "state reduction": 1.0,
            "variables": 2.0,
            "precomputation of sums": 1.0,
            "iterative dynamic programming": 1.0,
            "precomputation of frequency sums": 1.0,
            "greedy algorithm": 1.0,
            "two-pass approach": 1.0,
            "depth-first search (DFS)": 1.3333333333333333,
            "early stopping if target node is reached": 1.0,
            "defaultdict for adjacency list": 1.0,
            "deque for BFS queue": 1.0,
            "single pass greedy algorithm": 1.0,
            "tracking minimum price": 1.0,
            "conditional checks for fluctuations": 1.0,
            "early exit on goal condition": 1.0,
            "use of teleportation points to reduce search space": 1.0,
            "conditional checks": 1.0,
            "early error logging": 1.0,
            "2D DP array": 1.0,
            "early return for edge case": 1.0,
            "Kadane's algorithm extension": 1.0,
            "prefix sum": 1.0,
            "1D Kadane's algorithm": 1.0,
            "prefix sum with hashmap": 1.0,
            "cumulative balance tracking": 1.0,
            "hashmap for quick lookups": 1.0,
            "hashmap": 1.0,
            "graph traversal with constraints": 1.0,
            "priority queue for maximum path tracking": 1.0,
            "early termination upon reaching destination": 1.0,
            "priority queue (max-heap)": 1.0,
            "iterative validation": 1.0,
            "single pass validation": 1.0,
            "use of sets for O(1) lookups": 1.0,
            "expression evaluation": 1.0,
            "string manipulation": 1.0,
            "index validation": 1.0,
            "string": 1.0,
            "recursive backtracking": 1.0,
            "recursive depth-first traversal": 1.0,
            "recursive validation": 1.0,
            "early exit on invalidity": 1.0,
            "expression tree construction and evaluation": 1.0,
            "recursive evaluation": 1.0,
            "stack-based tree construction": 1.0,
            "binary tree": 1.0,
            "early exit upon successful deletion": 1.0,
            "depth-first search (DFS) with recursion": 1.0,
            "backtracking to handle cycles": 1.0,
            "backtracking with trie": 1.0,
            "trie data structure for efficient prefix searching": 1.0,
            "recursive search": 1.0,
            "early return upon finding target": 1.0,
            "binary search": 2.0,
            "recursive approach": 1.0,
            "2D grid (list of lists)": 1.0,
            "recursive DFS to explore paths": 1.0,
            "pruning invalid paths early": 1.0,
            "comparison-based sorting with error checking": 1.0,
            "early exit on error detection": 1.0,
            "sorting with validation": 2.0,
            "custom sorting key": 1.0,
            "early return on error detection": 1.0,
            "custom sorting with validation": 2.0,
            "early validation checks": 2.0,
            "use of sorting keys": 1.0,
            "preprocessing data for sorting": 1.0,
            "dynamic programming with stack": 1.0,
            "histogram representation": 1.0,
            "monotonic stack": 1.0,
            "iterative update of maximum product for subsequences": 1.0,
            "state transition": 2.0,
            "binary search for optimization": 2.0,
            "sorting tasks by end time": 1.0,
            "2D DP table to store intermediate results": 1.0,
            "cumulative sum tracking": 1.0,
            "hashmap for quick lookup": 1.0,
            "binary search on answer": 1.0,
            "greedy partitioning": 1.0,
            "1D DP array": 1.0,
            "prefix sums for range sum calculation": 1.0,
            "2D array (DP table)": 4.0,
            "mathematical formula for scheduling": 1.0,
            "Counter from collections": 1.0,
            "sliding window": 3.0,
            "early termination for invalid subarrays": 1.0,
            "graph traversal and coloring": 1.0,
            "BFS for graph traversal": 1.0,
            "modular arithmetic for color assignment": 1.0,
            "modified binary search with greedy approach": 1.0,
            "binary search for efficient position finding": 1.0,
            "two-pointer technique": 1.0,
            "2D DP table to track subsequence length with changes": 1.0,
            "state representation": 1.0,
            "transition optimization": 1.0,
            "dynamic programming table to track minimum fixes": 1.0,
            "early termination if fixes exceed k": 1.0,
            "cost minimization": 1.0,
            "backward iteration to prevent overwriting": 1.0,
            "use of sorted unique values to limit targets": 1.0,
            "dynamic window resizing": 1.0,
            "2D DP table": 1.0,
            "iterative filling": 1.0,
            "string manipulation with KMP algorithm": 1.0,
            "KMP algorithm for pattern matching": 1.0,
            "pre-sorting": 1.0,
            "cost calculation": 1.0,
            "recursive merge sort": 1.0,
            "recursive decomposition": 1.0,
            "quickselect algorithm": 1.0,
            "in-place partitioning": 1.0,
            "recursive divide and conquer": 1.0,
            "depth-first search (DFS) recursion": 1.0,
            "recursive depth tracking": 1.0,
            "recursive merging": 1.0,
            "binary merge": 1.0,
            "linked list": 1.0,
            "stack-based approach": 1.0,
            "use of stack to manage indices efficiently": 1.0
        },
        "easy": {
            "two-pointer technique": 1.0,
            "linear merge": 1.0,
            "list": 1.0,
            "linear scan": 1.0,
            "single pass iteration": 1.0,
            "array": 3.0,
            "sorting": 1.0,
            "in-place sorting": 1.0,
            "set-based lookup": 1.0,
            "early termination": 1.0,
            "set for O(1) lookups": 1.0,
            "set": 1.0,
            "array manipulation": 1.0,
            "in-place modification": 1.0,
            "reversal algorithm": 1.0
        },
        "medium": {
            "custom sorting": 1.0,
            "custom key function for sorting": 1.0,
            "dictionary": 3.0,
            "hashing": 1.0,
            "use of sorted string as a hash key": 1.0,
            "defaultdict": 1.0,
            "sorting with custom comparator": 1.0,
            "use of Counter for frequency counting": 1.0,
            "Counter (from collections)": 1.0,
            "list": 3.0,
            "dynamic programming": 5.0,
            "use of dp array to store intermediate results": 1.0,
            "array": 3.0,
            "iterative update of dp array": 1.0,
            "iterative filling of dp table": 1.0,
            "2D array": 2.0,
            "bottom-up approach": 1.0,
            "iterative approach": 1.0,
            "state transition": 1.0,
            "iteration": 1.0,
            "early exit on invalid input": 1.0,
            "recursion": 2.0,
            "early termination on error": 1.0,
            "stack-based validation": 1.0,
            "early exit on mismatch": 1.0,
            "stack": 1.0,
            "backtracking": 1.0,
            "pruning using palindrome check": 1.0,
            "recursive traversal": 1.0
        }
    },
    "total_patterns": {
        "backtracking": 9.0,
        "backtracking with state restoration": 1.0,
        "list": 21.666666666666668,
        "backtracking with Trie data structure": 1.0,
        "Trie for efficient word lookup": 1.0,
        "backtracking to explore paths": 1.0,
        "Trie": 4.0,
        "set": 9.666666666666666,
        "pruning invalid states": 1.0,
        "pruning using sets for columns and diagonals": 3.0,
        "pruning": 4.0,
        "sorting": 2.0,
        "duplicate skipping": 1.0,
        "backtracking with Trie": 3.0,
        "Trie data structure for efficient prefix searching": 1.0,
        "early termination on found words": 1.0,
        "pruning through early return on invalid placement": 1.0,
        "2D list": 2.6666666666666665,
        "early stopping": 1.0,
        "sorting to handle duplicates": 2.0,
        "dynamic programming": 15.0,
        "precomputation of palindrome substrings": 1.0,
        "2D array": 8.0,
        "1D array": 7.0,
        "backtracking with trie": 1.5,
        "trie data structure to reduce search space": 2.0,
        "early termination on word found": 1.0,
        "trie": 2.5,
        "non-recursive state tracking": 1.0,
        "array": 12.333333333333334,
        "recursive backtracking": 1.0,
        "divide and conquer": 3.0,
        "tree": 1.0,
        "pruning with leading zero check": 2.0,
        "iterative dp approach": 1.0,
        "state reduction": 2.0,
        "trie for prefix matching": 1.0,
        "early stopping on non-matching paths": 1.0,
        "backtracking with bit manipulation": 2.0,
        "bit manipulation for state representation": 1.0,
        "pruning invalid states early": 1.0,
        "bitmask": 4.0,
        "tabulation": 1.5,
        "early termination": 2.0,
        "precomputation of palindromic substrings": 2.0,
        "iterative dynamic programming": 2.0,
        "recursive sequence generation": 1.0,
        "iterative approach for sequence generation": 1.0,
        "grouping and hierarchical organization": 1.0,
        "sorting for grouping": 1.0,
        "recursive hierarchy building": 1.0,
        "defaultdict": 2.5,
        "nested dictionary": 1.0,
        "combinatorial generation and search": 1.0,
        "use of itertools.product for efficient combination generation": 1.0,
        "tuple": 1.0,
        "sorting and selection": 1.0,
        "avoid square root calculation": 1.0,
        "lexicographical sorting for ties": 1.0,
        "recursion and sorting": 1.0,
        "use of set for uniqueness": 1.0,
        "sorting and recursive binary search": 1.0,
        "divide and conquer in binary search": 1.0,
        "recursive sorting": 1.0,
        "hashing with character frequency": 1.0,
        "character frequency tuple as hash key": 1.0,
        "sorting and interval merging": 1.0,
        "sorting for efficient merging": 1.0,
        "linear scan for merging": 1.0,
        "brute force with filtering": 1.0,
        "use of set to ensure uniqueness": 1.0,
        "recursive backtracking with memoization": 1.0,
        "memoization": 3.0,
        "Trie for efficient prefix search": 1.0,
        "backtracking with pruning": 1.0,
        "pruning using used array": 1.0,
        "recursion": 2.0,
        "modular arithmetic": 1.0,
        "none": 1.0,
        "palindrome checking": 1.0,
        "bit manipulation": 2.0,
        "Trie data structure for efficient prefix search": 1.0,
        "recursive tree generation": 1.0,
        "hashmap counting": 1.0,
        "early exit for empty input": 1.0,
        "frequency counting": 1.0,
        "use of dictionary for counting": 1.0,
        "dictionary": 12.333333333333334,
        "pruning with palindrome check": 1.0,
        "iterative stack-based approach": 1.0,
        "early exit on mismatch": 1.0,
        "stack": 2.0,
        "backtracking to explore all paths": 1.0,
        "pruning by marking cells as visited": 1.0,
        "2D list (grid)": 1.0,
        "list (path)": 1.0,
        "breadth-first search (BFS)": 3.0,
        "early exit upon finding treasure": 1.0,
        "visited set to prevent cycles": 1.0,
        "deque": 2.0,
        "early exit upon finding the solution": 1.0,
        "backtracking with trie optimization": 1.0,
        "trie data structure for prefix searching": 1.0,
        "early termination in backtracking": 1.0,
        "bit manipulation for efficient state tracking": 1.0,
        "pruning of invalid states early": 1.0,
        "bottom-up approach": 2.0,
        "prefix sum for range sum calculation": 1.0,
        "2D array (DP table)": 3.0,
        "dynamic programming with bitmasking": 1.0,
        "bitmasking to represent task assignments": 1.0,
        "iterative DP table update": 1.0,
        "use of a set for O(1) lookups": 1.0,
        "bottom-up dynamic programming": 1.0,
        "preprocessing palindromic substrings": 1.0,
        "iterative DP table filling": 1.5,
        "in-place updates": 1.0,
        "tracking max/min products": 1.0,
        "variables": 3.0,
        "state tracking with visited set": 1.0,
        "early exit upon reaching target": 1.0,
        "recursive backtracking with trie": 1.0,
        "early termination when word is found": 1.0,
        "boolean arrays": 2.0,
        "2D table for palindrome checking": 1.0,
        "1D table for minimum cuts": 1.0,
        "recursion with memoization": 4.0,
        "memoization to cache results of subproblems": 1.0,
        "dynamic programming with binary search": 1.5,
        "binary search for non-conflicting jobs": 1.0,
        "precomputation of palindromes": 2.0,
        "dynamic programming with memoization": 1.0,
        "dynamic programming with recursion": 2.0,
        "iterative approach": 2.3333333333333335,
        "space optimization": 1.0,
        "set for fast lookup": 1.0,
        "precomputation of sums": 1.0,
        "precomputation of frequency sums": 1.0,
        "greedy algorithm": 1.5,
        "two-pass approach": 1.0,
        "depth-first search (DFS)": 1.6666666666666667,
        "early stopping if target node is reached": 1.0,
        "defaultdict for adjacency list": 1.0,
        "deque for BFS queue": 1.0,
        "single pass greedy algorithm": 1.0,
        "tracking minimum price": 1.0,
        "conditional checks for fluctuations": 1.0,
        "early exit on goal condition": 1.0,
        "use of teleportation points to reduce search space": 1.0,
        "conditional checks": 1.0,
        "early error logging": 1.0,
        "memoization with a 2D table": 1.0,
        "tail recursion": 1.5,
        "stack-based validation": 1.0,
        "early exit on imbalance": 1.0,
        "early exit upon reaching the target": 1.0,
        "using a queue for level-order traversal": 1.0,
        "recursive traversal": 2.0,
        "nonlocal variables for state tracking": 1.0,
        "recursive parsing": 1.0,
        "operator precedence handling": 1.0,
        "recursive descent parsing": 1.0,
        "two-pointer technique": 1.0,
        "linear merge": 1.0,
        "linear scan": 1.0,
        "single pass iteration": 1.0,
        "in-place sorting": 2.0,
        "set-based lookup": 1.0,
        "set for O(1) lookups": 1.0,
        "array manipulation": 1.0,
        "in-place modification": 1.0,
        "reversal algorithm": 1.0,
        "2D DP array": 1.0,
        "early return for edge case": 1.0,
        "Kadane's algorithm extension": 1.0,
        "prefix sum": 1.0,
        "1D Kadane's algorithm": 1.0,
        "prefix sum with hashmap": 1.0,
        "cumulative balance tracking": 1.0,
        "hashmap for quick lookups": 1.0,
        "hashmap": 1.0,
        "graph traversal with constraints": 1.0,
        "priority queue for maximum path tracking": 1.0,
        "early termination upon reaching destination": 1.0,
        "priority queue (max-heap)": 1.0,
        "iterative validation": 1.0,
        "single pass validation": 1.0,
        "use of sets for O(1) lookups": 1.0,
        "expression evaluation": 1.0,
        "string manipulation": 1.0,
        "index validation": 1.0,
        "string": 1.0,
        "recursive depth-first traversal": 1.0,
        "recursive validation": 1.0,
        "early exit on invalidity": 1.0,
        "expression tree construction and evaluation": 1.0,
        "recursive evaluation": 1.0,
        "stack-based tree construction": 1.0,
        "binary tree": 1.0,
        "early exit upon successful deletion": 1.0,
        "depth-first search (DFS) with recursion": 1.0,
        "backtracking to handle cycles": 1.0,
        "trie data structure for efficient prefix searching": 1.0,
        "recursive search": 1.0,
        "early return upon finding target": 1.0,
        "binary search": 3.0,
        "recursive approach": 1.0,
        "2D grid (list of lists)": 1.0,
        "recursive DFS to explore paths": 1.0,
        "pruning invalid paths early": 1.0,
        "custom sorting": 1.0,
        "custom key function for sorting": 1.0,
        "hashing": 1.0,
        "use of sorted string as a hash key": 1.0,
        "sorting with custom comparator": 1.0,
        "use of Counter for frequency counting": 1.0,
        "Counter (from collections)": 1.0,
        "comparison-based sorting with error checking": 1.0,
        "early exit on error detection": 1.0,
        "sorting with validation": 2.0,
        "custom sorting key": 2.0,
        "early return on error detection": 2.0,
        "custom sorting with validation": 2.0,
        "early validation checks": 2.0,
        "use of sorting keys": 1.0,
        "preprocessing data for sorting": 1.0,
        "dynamic programming with stack": 1.0,
        "histogram representation": 1.0,
        "monotonic stack": 1.0,
        "iterative update of maximum product for subsequences": 1.0,
        "state transition": 3.0,
        "binary search for optimization": 2.0,
        "sorting tasks by end time": 1.0,
        "2D DP table to store intermediate results": 1.0,
        "cumulative sum tracking": 1.0,
        "hashmap for quick lookup": 1.0,
        "binary search on answer": 1.0,
        "greedy partitioning": 1.0,
        "1D DP array": 1.0,
        "prefix sums for range sum calculation": 1.0,
        "mathematical formula for scheduling": 1.0,
        "Counter from collections": 1.0,
        "sliding window": 3.0,
        "early termination for invalid subarrays": 1.0,
        "graph traversal and coloring": 1.0,
        "BFS for graph traversal": 1.0,
        "modular arithmetic for color assignment": 1.0,
        "modified binary search with greedy approach": 1.0,
        "binary search for efficient position finding": 1.0,
        "use of dp array to store intermediate results": 1.0,
        "iterative update of dp array": 1.0,
        "iterative filling of dp table": 1.0,
        "tracking maximum reach": 1.0,
        "memoization to avoid redundant calculations": 1.0,
        "backtracking with depth-first search (DFS)": 1.0,
        "pruning by marking visited nodes": 1.0,
        "early termination when conditions are met": 1.0,
        "iteration": 1.0,
        "early exit on invalid input": 1.0,
        "early termination on error": 1.0,
        "pruning using palindrome check": 1.0,
        "precomputation of costs": 1.0,
        "iterative filling of DP table": 1.0,
        "greedy approach with linear scan": 1.0,
        "single pass with condition checks": 1.0,
        "local modification analysis": 1.0,
        "binary search with greedy partitioning": 1.0,
        "greedy validation": 1.0,
        "binary search for LIS": 1.0,
        "precomputation of LIS from both ends": 1.0,
        "filtering and sorting": 11.0,
        "early filtering of ineligible students": 1.0,
        "early filtering": 3.0,
        "composite sorting keys": 1.0,
        "set for fast membership checking": 1.0,
        "conditional filtering": 1.0,
        "sorting by ID for consistent output": 1.0,
        "early return for invalid input": 1.0,
        "early return on error": 3.0,
        "conditional logic for query type": 1.0,
        "conditional filtering and sorting": 2.0,
        "conditional branching": 1.0,
        "early return": 1.0,
        "case-insensitive comparison": 1.0,
        "filter and sort": 2.0,
        "list comprehension for filtering": 6.0,
        "built-in sort for sorting": 1.0,
        "lambda function for sorting": 1.0,
        "built-in sort function": 1.0,
        "stable sort": 1.0,
        "filtering, sorting, and searching": 1.0,
        "binary search for efficient searching": 1.0,
        "filtering and binary search": 1.0,
        "binary search for efficient lookup": 3.0,
        "cleaning, custom sorting, binary search": 1.0,
        "sorting and binary search": 1.0,
        "2D DP table to track subsequence length with changes": 1.0,
        "state representation": 1.0,
        "transition optimization": 1.0,
        "dynamic programming table to track minimum fixes": 1.0,
        "early termination if fixes exceed k": 1.0,
        "cost minimization": 1.0,
        "backward iteration to prevent overwriting": 1.0,
        "use of sorted unique values to limit targets": 1.0,
        "dynamic window resizing": 1.0,
        "2D DP table": 1.0,
        "iterative filling": 1.0,
        "string manipulation with KMP algorithm": 1.0,
        "KMP algorithm for pattern matching": 1.0,
        "pre-sorting": 1.0,
        "cost calculation": 1.0,
        "recursive function calls": 1.0,
        "avoid duplicates in file list": 1.0,
        "recursive merge sort": 1.0,
        "recursive decomposition": 1.0,
        "quickselect algorithm": 1.0,
        "in-place partitioning": 1.0,
        "recursive divide and conquer": 1.0,
        "depth-first search (DFS) recursion": 1.0,
        "recursive depth tracking": 1.0,
        "recursive merging": 1.0,
        "binary merge": 1.0,
        "linked list": 1.0,
        "stack-based approach": 1.0,
        "use of stack to manage indices efficiently": 1.0
    },
    "comparative_analysis": {
        "algorithms-functions-recursion-searching-hard": {
            "success_rate": 0.1,
            "avg_attempts": 3.0,
            "patterns": {
                "backtracking": 10.0,
                "backtracking with state restoration": 1.0,
                "list": 7.0,
                "backtracking with Trie data structure": 1.0,
                "Trie for efficient word lookup": 1.0,
                "backtracking to explore paths": 1.0,
                "Trie": 2.0,
                "set": 6.0,
                "pruning invalid states": 1.0,
                "pruning using sets for columns and diagonals": 2.0,
                "pruning": 3.0,
                "sorting": 1.0,
                "duplicate skipping": 1.0,
                "backtracking with Trie": 1.0,
                "Trie data structure for efficient prefix searching": 1.0,
                "early termination on found words": 1.0,
                "pruning through early return on invalid placement": 1.0,
                "2D list": 2.0,
                "early stopping": 1.0,
                "sorting to handle duplicates": 1.0,
                "dynamic programming": 4.0,
                "precomputation of palindrome substrings": 1.0,
                "2D array": 2.0,
                "1D array": 2.0,
                "backtracking with trie": 2.0,
                "trie data structure to reduce search space": 1.0,
                "early termination on word found": 1.0,
                "trie": 2.0,
                "non-recursive state tracking": 1.0,
                "array": 3.0,
                "recursive backtracking": 1.0,
                "divide and conquer": 1.0,
                "tree": 1.0,
                "pruning with leading zero check": 1.0,
                "iterative dp approach": 1.0,
                "state reduction": 1.0,
                "trie for prefix matching": 1.0,
                "early stopping on non-matching paths": 1.0,
                "backtracking with bit manipulation": 1.0,
                "bit manipulation for state representation": 1.0,
                "pruning invalid states early": 1.0,
                "bitmask": 1.0,
                "tabulation": 1.0,
                "early termination": 1.0,
                "precomputation of palindromic substrings": 1.0,
                "iterative dynamic programming": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 3.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "functions-recursion-searching-sorting-very hard": {
            "success_rate": 0.1,
            "avg_attempts": 3.0,
            "patterns": {
                "recursive sequence generation": 1.0,
                "iterative approach for sequence generation": 1.0,
                "list": 7.0,
                "grouping and hierarchical organization": 1.0,
                "sorting for grouping": 1.0,
                "recursive hierarchy building": 1.0,
                "defaultdict": 2.0,
                "nested dictionary": 1.0,
                "combinatorial generation and search": 1.0,
                "use of itertools.product for efficient combination generation": 1.0,
                "tuple": 1.0,
                "sorting and selection": 1.0,
                "avoid square root calculation": 1.0,
                "lexicographical sorting for ties": 1.0,
                "recursion and sorting": 1.0,
                "use of set for uniqueness": 1.0,
                "set": 2.0,
                "sorting and recursive binary search": 1.0,
                "divide and conquer in binary search": 1.0,
                "recursive sorting": 1.0,
                "divide and conquer": 1.0,
                "array": 1.0,
                "hashing with character frequency": 1.0,
                "character frequency tuple as hash key": 1.0,
                "sorting and interval merging": 1.0,
                "sorting for efficient merging": 1.0,
                "linear scan for merging": 1.0,
                "brute force with filtering": 1.0,
                "use of set to ensure uniqueness": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-functions-recursion-searching-very hard": {
            "success_rate": 0.4,
            "avg_attempts": 3.0,
            "patterns": {
                "recursive backtracking with memoization": 1.0,
                "memoization": 1.0,
                "2D list": 1.0,
                "backtracking": 2.0,
                "pruning using sets for columns and diagonals": 1.0,
                "list": 2.0,
                "set": 2.0,
                "backtracking with Trie": 1.0,
                "Trie for efficient prefix search": 1.0,
                "backtracking with pruning": 1.0,
                "Trie": 1.0,
                "sorting to handle duplicates": 1.0,
                "pruning using used array": 1.0,
                "dynamic programming": 1.0,
                "tabulation": 1.0,
                "array": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-recursion-very hard": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "recursion": 1.0,
                "modular arithmetic": 1.0,
                "none": 1.0,
                "backtracking": 3.0,
                "palindrome checking": 1.0,
                "list": 2.0,
                "bit manipulation": 1.0,
                "bitmask": 1.0,
                "backtracking with Trie": 1.0,
                "Trie data structure for efficient prefix search": 1.0,
                "Trie": 1.0,
                "set": 1.0,
                "recursive tree generation": 1.0,
                "divide and conquer": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 1.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-loops-recursion-searching-very hard": {
            "success_rate": 0.3,
            "avg_attempts": 3.0,
            "patterns": {
                "hashmap counting": 1.0,
                "early exit for empty input": 1.0,
                "defaultdict": 1.0,
                "frequency counting": 1.0,
                "use of dictionary for counting": 1.0,
                "dictionary": 2.0,
                "backtracking": 2.0,
                "pruning with palindrome check": 1.0,
                "list": 1.0,
                "iterative stack-based approach": 1.0,
                "early exit on mismatch": 1.0,
                "stack": 1.0,
                "backtracking to explore all paths": 1.0,
                "pruning by marking cells as visited": 1.0,
                "2D list (grid)": 1.0,
                "list (path)": 1.0,
                "breadth-first search (BFS)": 2.0,
                "early exit upon finding treasure": 1.0,
                "visited set to prevent cycles": 1.0,
                "deque": 2.0,
                "set": 3.0,
                "early exit upon finding the solution": 1.0,
                "backtracking with trie optimization": 1.0,
                "trie data structure for prefix searching": 1.0,
                "early termination in backtracking": 1.0,
                "trie": 1.0,
                "backtracking with bit manipulation": 1.0,
                "bit manipulation for efficient state tracking": 1.0,
                "pruning of invalid states early": 1.0,
                "bitmask": 1.0,
                "dynamic programming": 1.0,
                "precomputation of palindromic substrings": 1.0,
                "bottom-up approach": 1.0,
                "2D array": 1.0,
                "1D array": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 1.0,
                "optimization_patterns": 1.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-recursion-sorting-hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 4.0,
                "prefix sum for range sum calculation": 1.0,
                "2D array (DP table)": 1.0,
                "array": 3.0,
                "dynamic programming with bitmasking": 1.0,
                "bitmasking to represent task assignments": 1.0,
                "iterative DP table update": 1.0,
                "use of a set for O(1) lookups": 1.0,
                "bottom-up dynamic programming": 1.0,
                "set": 1.0,
                "preprocessing palindromic substrings": 1.0,
                "iterative DP table filling": 1.0,
                "2D array": 1.0,
                "1D array": 1.0,
                "in-place updates": 1.0,
                "tracking max/min products": 1.0,
                "variables": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-recursion-searching-very hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "breadth-first search (BFS)": 1.0,
                "state tracking with visited set": 1.0,
                "early exit upon reaching target": 1.0,
                "deque": 1.0,
                "set": 2.0,
                "recursive backtracking with trie": 1.0,
                "trie data structure to reduce search space": 1.0,
                "early termination when word is found": 1.0,
                "trie": 1.0,
                "backtracking": 2.0,
                "bit manipulation": 1.0,
                "boolean arrays": 2.0,
                "bitmask": 1.0,
                "pruning with leading zero check": 1.0,
                "list": 1.0,
                "dynamic programming": 1.0,
                "2D table for palindrome checking": 1.0,
                "1D table for minimum cuts": 1.0,
                "2D array": 1.0,
                "1D array": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 1.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-dynamic_programming-error_handling-recursion-very hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "recursion with memoization": 4.0,
                "memoization to cache results of subproblems": 1.0,
                "set": 2.0,
                "dictionary": 4.0,
                "backtracking": 1.0,
                "pruning": 1.0,
                "early termination": 1.0,
                "2D array": 2.0,
                "dynamic programming with binary search": 1.0,
                "sorting": 2.0,
                "binary search for non-conflicting jobs": 1.0,
                "array": 2.0,
                "dynamic programming": 2.0,
                "precomputation of palindromes": 1.0,
                "iterative DP table filling": 1.0,
                "1D array": 1.0,
                "dynamic programming with memoization": 1.0,
                "list": 1.0,
                "dynamic programming with recursion": 2.0,
                "iterative approach": 1.0,
                "space optimization": 1.0,
                "memoization": 4.0,
                "2D list": 1.0,
                "set for fast lookup": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 1.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-recursion-sorting-very hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 4.0,
                "state reduction": 1.0,
                "iterative approach": 1.0,
                "variables": 1.0,
                "precomputation of sums": 1.0,
                "iterative dynamic programming": 1.0,
                "2D array": 3.0,
                "bottom-up approach": 1.0,
                "precomputation of palindromes": 1.0,
                "1D array": 1.0,
                "precomputation of frequency sums": 1.0,
                "greedy algorithm": 1.0,
                "two-pass approach": 1.0,
                "array": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 1.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-conditionals-error_handling-very hard": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "depth-first search (DFS)": 1.0,
                "backtracking": 1.0,
                "2D list": 1.0,
                "breadth-first search (BFS)": 2.0,
                "early stopping if target node is reached": 1.0,
                "defaultdict for adjacency list": 1.0,
                "deque for BFS queue": 1.0,
                "single pass greedy algorithm": 1.0,
                "tracking minimum price": 1.0,
                "conditional checks for fluctuations": 1.0,
                "variables": 1.0,
                "early exit on goal condition": 1.0,
                "use of teleportation points to reduce search space": 1.0,
                "deque": 1.0,
                "set": 1.0,
                "conditional checks": 1.0,
                "early error logging": 1.0,
                "list": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 1.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-recursion-hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 3.0,
                "tabulation": 1.0,
                "2D array": 2.0,
                "iterative approach": 1.0,
                "memoization": 1.0,
                "array": 1.0,
                "memoization with a 2D table": 1.0,
                "bottom-up approach": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "data_structures-error_handling-functions-recursion-hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "recursion": 1.0,
                "tail recursion": 1.0,
                "list": 2.0,
                "stack-based validation": 1.0,
                "early exit on imbalance": 1.0,
                "stack": 1.0,
                "breadth-first search (BFS)": 1.0,
                "early exit upon reaching the target": 1.0,
                "using a queue for level-order traversal": 1.0,
                "deque": 1.0,
                "set": 1.0,
                "dictionary": 2.0,
                "recursive traversal": 1.0,
                "nonlocal variables for state tracking": 1.0,
                "recursive parsing": 1.0,
                "operator precedence handling": 1.0,
                "recursive descent parsing": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "data_structures-dynamic_programming-functions-sorting-easy": {
            "success_rate": 0.4,
            "avg_attempts": 3.0,
            "patterns": {
                "two-pointer technique": 1.0,
                "linear merge": 1.0,
                "list": 1.0,
                "linear scan": 1.0,
                "single pass iteration": 1.0,
                "array": 3.0,
                "sorting": 1.0,
                "in-place sorting": 1.0,
                "set-based lookup": 1.0,
                "early termination": 1.0,
                "set for O(1) lookups": 1.0,
                "set": 1.0,
                "array manipulation": 1.0,
                "in-place modification": 1.0,
                "reversal algorithm": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 1.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-data_structures-loops-very hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 2.0,
                "2D DP array": 1.0,
                "early return for edge case": 1.0,
                "2D array": 2.0,
                "Kadane's algorithm extension": 1.0,
                "prefix sum": 1.0,
                "1D Kadane's algorithm": 1.0,
                "array": 1.0,
                "prefix sum with hashmap": 1.0,
                "cumulative balance tracking": 1.0,
                "hashmap for quick lookups": 1.0,
                "hashmap": 1.0,
                "graph traversal with constraints": 1.0,
                "priority queue for maximum path tracking": 1.0,
                "early termination upon reaching destination": 1.0,
                "priority queue (max-heap)": 1.0,
                "dictionary": 1.0,
                "bottom-up approach": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 2.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "data_structures-error_handling-functions-recursion-very hard": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "iterative validation": 1.0,
                "single pass validation": 1.0,
                "use of sets for O(1) lookups": 1.0,
                "dictionary": 4.0,
                "set": 3.0,
                "expression evaluation": 1.0,
                "string manipulation": 1.0,
                "index validation": 1.0,
                "list": 3.0,
                "string": 1.0,
                "depth-first search (DFS)": 1.0,
                "backtracking": 2.0,
                "2D list": 2.0,
                "early termination": 1.0,
                "recursive backtracking": 1.0,
                "recursion": 2.0,
                "recursive depth-first traversal": 1.0,
                "recursive validation": 1.0,
                "early exit on invalidity": 1.0,
                "expression tree construction and evaluation": 1.0,
                "recursive evaluation": 1.0,
                "stack-based tree construction": 1.0,
                "stack": 1.0,
                "binary tree": 1.0,
                "early exit upon successful deletion": 1.0,
                "depth-first search (DFS) with recursion": 1.0,
                "backtracking to handle cycles": 1.0,
                "backtracking with trie": 1.0,
                "trie data structure for efficient prefix searching": 1.0,
                "backtracking to explore all paths": 1.0,
                "trie": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 1.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-conditionals-recursion-searching-very hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "recursive search": 1.0,
                "early return upon finding target": 1.0,
                "list": 2.0,
                "divide and conquer": 1.0,
                "binary search": 1.0,
                "recursive approach": 1.0,
                "2D array": 1.0,
                "depth-first search (DFS)": 2.0,
                "backtracking": 2.0,
                "2D grid (list of lists)": 1.0,
                "recursive DFS to explore paths": 1.0,
                "pruning invalid paths early": 1.0,
                "2D list": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "data_structures-functions-sorting-medium": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "custom sorting": 1.0,
                "custom key function for sorting": 1.0,
                "dictionary": 1.0,
                "hashing": 1.0,
                "use of sorted string as a hash key": 1.0,
                "defaultdict": 1.0,
                "sorting with custom comparator": 1.0,
                "use of Counter for frequency counting": 1.0,
                "Counter (from collections)": 1.0,
                "list": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-error_handling-sorting-very hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "comparison-based sorting with error checking": 1.0,
                "early exit on error detection": 1.0,
                "list": 5.0,
                "sorting with validation": 2.0,
                "custom sorting key": 1.0,
                "dictionary": 4.0,
                "early return on error detection": 1.0,
                "custom sorting with validation": 2.0,
                "early validation checks": 2.0,
                "use of sorting keys": 1.0,
                "preprocessing data for sorting": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-data_structures-dynamic_programming-sorting-very hard": {
            "success_rate": 0.06666666666666667,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming with stack": 1.0,
                "histogram representation": 1.0,
                "monotonic stack": 1.0,
                "array": 8.0,
                "stack": 1.0,
                "dynamic programming": 6.0,
                "iterative update of maximum product for subsequences": 1.0,
                "iterative approach": 2.0,
                "state transition": 1.0,
                "binary search for optimization": 2.0,
                "sorting tasks by end time": 1.0,
                "2D DP table to store intermediate results": 1.0,
                "2D array": 1.0,
                "dynamic programming with binary search": 1.0,
                "sorting": 2.0,
                "prefix sum with hashmap": 1.0,
                "cumulative sum tracking": 1.0,
                "hashmap for quick lookup": 1.0,
                "hashmap": 1.0,
                "binary search": 1.0,
                "binary search on answer": 1.0,
                "greedy partitioning": 1.0,
                "1D DP array": 1.0,
                "prefix sums for range sum calculation": 1.0,
                "2D array (DP table)": 1.0,
                "greedy algorithm": 1.0,
                "mathematical formula for scheduling": 1.0,
                "Counter from collections": 1.0,
                "sliding window": 2.0,
                "early termination for invalid subarrays": 1.0,
                "set": 1.0,
                "graph traversal and coloring": 1.0,
                "BFS for graph traversal": 1.0,
                "modular arithmetic for color assignment": 1.0,
                "defaultdict": 1.0,
                "deque": 1.0,
                "modified binary search with greedy approach": 1.0,
                "binary search for efficient position finding": 1.0,
                "list": 1.0,
                "two-pointer technique": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 1.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 1.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-loops-searching-medium": {
            "success_rate": 0.4,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 5.0,
                "use of dp array to store intermediate results": 1.0,
                "array": 3.0,
                "iterative update of dp array": 1.0,
                "iterative filling of dp table": 1.0,
                "2D array": 2.0,
                "bottom-up approach": 1.0,
                "iterative approach": 1.0,
                "state transition": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-loops-searching-hard": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 2.0,
                "iterative approach": 1.0,
                "array": 2.0,
                "greedy algorithm": 1.0,
                "tracking maximum reach": 1.0,
                "early stopping": 1.0,
                "recursive backtracking with memoization": 1.0,
                "memoization to avoid redundant calculations": 1.0,
                "set": 1.0,
                "dictionary": 1.0,
                "backtracking with depth-first search (DFS)": 1.0,
                "pruning by marking visited nodes": 1.0,
                "early termination when conditions are met": 1.0,
                "2D array": 2.0,
                "bottom-up approach": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 1.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "error_handling-functions-recursion-medium": {
            "success_rate": 0.8,
            "avg_attempts": 3.0,
            "patterns": {
                "iteration": 1.0,
                "early exit on invalid input": 1.0,
                "dictionary": 2.0,
                "recursion": 2.0,
                "early termination on error": 1.0,
                "list": 2.0,
                "stack-based validation": 1.0,
                "early exit on mismatch": 1.0,
                "stack": 1.0,
                "backtracking": 1.0,
                "pruning using palindrome check": 1.0,
                "recursive traversal": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-error_handling-sorting-hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 2.0,
                "precomputation of costs": 1.0,
                "iterative filling of DP table": 1.0,
                "2D array (DP table)": 1.0,
                "greedy approach with linear scan": 1.0,
                "single pass with condition checks": 1.0,
                "local modification analysis": 1.0,
                "array": 3.0,
                "binary search with greedy partitioning": 1.0,
                "binary search": 1.0,
                "greedy validation": 1.0,
                "iterative DP table filling": 1.0,
                "2D array": 1.0,
                "dynamic programming with binary search": 1.0,
                "binary search for LIS": 1.0,
                "precomputation of LIS from both ends": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-error_handling-searching-sorting-hard": {
            "success_rate": 0.3,
            "avg_attempts": 3.0,
            "patterns": {
                "filtering and sorting": 11.0,
                "in-place sorting": 3.0,
                "list": 20.0,
                "dictionary": 13.0,
                "early filtering of ineligible students": 1.0,
                "early filtering": 3.0,
                "composite sorting keys": 1.0,
                "set for fast membership checking": 1.0,
                "set": 1.0,
                "conditional checks": 1.0,
                "conditional filtering": 1.0,
                "sorting by ID for consistent output": 1.0,
                "early return for invalid input": 1.0,
                "early return on error": 2.0,
                "conditional logic for query type": 1.0,
                "conditional filtering and sorting": 2.0,
                "conditional branching": 1.0,
                "early return": 1.0,
                "case-insensitive comparison": 1.0,
                "filter and sort": 2.0,
                "list comprehension for filtering": 6.0,
                "built-in sort for sorting": 1.0,
                "lambda function for sorting": 1.0,
                "built-in sort function": 1.0,
                "stable sort": 1.0,
                "filtering, sorting, and searching": 1.0,
                "binary search for efficient searching": 1.0,
                "filtering and binary search": 1.0,
                "binary search for efficient lookup": 3.0,
                "cleaning, custom sorting, binary search": 1.0,
                "custom sorting key": 1.0,
                "sorting and binary search": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-error_handling-sorting-very hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 5.0,
                "2D DP table to track subsequence length with changes": 1.0,
                "2D array": 2.0,
                "state representation": 1.0,
                "transition optimization": 1.0,
                "dynamic programming table to track minimum fixes": 1.0,
                "early termination if fixes exceed k": 1.0,
                "2D array (DP table)": 2.0,
                "array": 2.0,
                "state transition": 1.0,
                "cost minimization": 1.0,
                "backward iteration to prevent overwriting": 1.0,
                "use of sorted unique values to limit targets": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 1.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-loops-searching-very hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "sliding window": 1.0,
                "dynamic window resizing": 1.0,
                "dictionary": 1.0,
                "dynamic programming": 3.0,
                "2D DP table": 1.0,
                "iterative filling": 1.0,
                "2D array": 1.0,
                "string manipulation with KMP algorithm": 1.0,
                "KMP algorithm for pattern matching": 1.0,
                "array": 2.0,
                "pre-sorting": 1.0,
                "cost calculation": 1.0,
                "precomputation of sums": 1.0,
                "2D array (DP table)": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 2.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-error_handling-functions-recursion-hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "recursive function calls": 1.0,
                "early return on error detection": 1.0,
                "dictionary": 2.0,
                "recursive traversal": 2.0,
                "avoid duplicates in file list": 1.0,
                "list": 4.0,
                "tail recursion": 2.0,
                "depth-first search (DFS)": 1.0,
                "backtracking": 1.0,
                "set": 1.0,
                "recursive evaluation": 1.0,
                "early return on error": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "data_structures-recursion-sorting-very hard": {
            "success_rate": 0.6,
            "avg_attempts": 3.0,
            "patterns": {
                "recursive merge sort": 1.0,
                "divide and conquer": 2.0,
                "recursive decomposition": 1.0,
                "list": 2.0,
                "quickselect algorithm": 1.0,
                "in-place partitioning": 1.0,
                "recursive divide and conquer": 1.0,
                "array": 1.0,
                "depth-first search (DFS) recursion": 1.0,
                "recursive depth tracking": 1.0,
                "recursive merging": 1.0,
                "binary merge": 1.0,
                "linked list": 1.0,
                "stack-based approach": 1.0,
                "use of stack to manage indices efficiently": 1.0,
                "stack": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 1.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        }
    },
    "pattern_distributions": {
        "algorithms-functions-recursion-searching": {
            "backtracking": 12.0,
            "backtracking with state restoration": 1.0,
            "list": 9.0,
            "backtracking with Trie data structure": 1.0,
            "Trie for efficient word lookup": 1.0,
            "backtracking to explore paths": 1.0,
            "Trie": 3.0,
            "set": 8.0,
            "pruning invalid states": 1.0,
            "pruning using sets for columns and diagonals": 3.0,
            "pruning": 3.0,
            "sorting": 1.0,
            "duplicate skipping": 1.0,
            "backtracking with Trie": 2.0,
            "Trie data structure for efficient prefix searching": 1.0,
            "early termination on found words": 1.0,
            "pruning through early return on invalid placement": 1.0,
            "2D list": 3.0,
            "early stopping": 1.0,
            "sorting to handle duplicates": 2.0,
            "dynamic programming": 5.0,
            "precomputation of palindrome substrings": 1.0,
            "2D array": 2.0,
            "1D array": 2.0,
            "backtracking with trie": 2.0,
            "trie data structure to reduce search space": 1.0,
            "early termination on word found": 1.0,
            "trie": 2.0,
            "non-recursive state tracking": 1.0,
            "array": 4.0,
            "recursive backtracking": 1.0,
            "divide and conquer": 1.0,
            "tree": 1.0,
            "pruning with leading zero check": 1.0,
            "iterative dp approach": 1.0,
            "state reduction": 1.0,
            "trie for prefix matching": 1.0,
            "early stopping on non-matching paths": 1.0,
            "backtracking with bit manipulation": 1.0,
            "bit manipulation for state representation": 1.0,
            "pruning invalid states early": 1.0,
            "bitmask": 1.0,
            "tabulation": 2.0,
            "early termination": 1.0,
            "precomputation of palindromic substrings": 1.0,
            "iterative dynamic programming": 1.0,
            "recursive backtracking with memoization": 1.0,
            "memoization": 1.0,
            "Trie for efficient prefix search": 1.0,
            "backtracking with pruning": 1.0,
            "pruning using used array": 1.0
        },
        "functions-recursion-searching-sorting": {
            "recursive sequence generation": 1.0,
            "iterative approach for sequence generation": 1.0,
            "list": 7.0,
            "grouping and hierarchical organization": 1.0,
            "sorting for grouping": 1.0,
            "recursive hierarchy building": 1.0,
            "defaultdict": 2.0,
            "nested dictionary": 1.0,
            "combinatorial generation and search": 1.0,
            "use of itertools.product for efficient combination generation": 1.0,
            "tuple": 1.0,
            "sorting and selection": 1.0,
            "avoid square root calculation": 1.0,
            "lexicographical sorting for ties": 1.0,
            "recursion and sorting": 1.0,
            "use of set for uniqueness": 1.0,
            "set": 2.0,
            "sorting and recursive binary search": 1.0,
            "divide and conquer in binary search": 1.0,
            "recursive sorting": 1.0,
            "divide and conquer": 1.0,
            "array": 1.0,
            "hashing with character frequency": 1.0,
            "character frequency tuple as hash key": 1.0,
            "sorting and interval merging": 1.0,
            "sorting for efficient merging": 1.0,
            "linear scan for merging": 1.0,
            "brute force with filtering": 1.0,
            "use of set to ensure uniqueness": 1.0
        },
        "algorithms-recursion": {
            "recursion": 1.0,
            "modular arithmetic": 1.0,
            "none": 1.0,
            "backtracking": 3.0,
            "palindrome checking": 1.0,
            "list": 2.0,
            "bit manipulation": 1.0,
            "bitmask": 1.0,
            "backtracking with Trie": 1.0,
            "Trie data structure for efficient prefix search": 1.0,
            "Trie": 1.0,
            "set": 1.0,
            "recursive tree generation": 1.0,
            "divide and conquer": 1.0
        },
        "conditionals-loops-recursion-searching": {
            "hashmap counting": 1.0,
            "early exit for empty input": 1.0,
            "defaultdict": 1.0,
            "frequency counting": 1.0,
            "use of dictionary for counting": 1.0,
            "dictionary": 2.0,
            "backtracking": 2.0,
            "pruning with palindrome check": 1.0,
            "list": 1.0,
            "iterative stack-based approach": 1.0,
            "early exit on mismatch": 1.0,
            "stack": 1.0,
            "backtracking to explore all paths": 1.0,
            "pruning by marking cells as visited": 1.0,
            "2D list (grid)": 1.0,
            "list (path)": 1.0,
            "breadth-first search (BFS)": 2.0,
            "early exit upon finding treasure": 1.0,
            "visited set to prevent cycles": 1.0,
            "deque": 2.0,
            "set": 3.0,
            "early exit upon finding the solution": 1.0,
            "backtracking with trie optimization": 1.0,
            "trie data structure for prefix searching": 1.0,
            "early termination in backtracking": 1.0,
            "trie": 1.0,
            "backtracking with bit manipulation": 1.0,
            "bit manipulation for efficient state tracking": 1.0,
            "pruning of invalid states early": 1.0,
            "bitmask": 1.0,
            "dynamic programming": 1.0,
            "precomputation of palindromic substrings": 1.0,
            "bottom-up approach": 1.0,
            "2D array": 1.0,
            "1D array": 1.0
        },
        "algorithms-dynamic_programming-recursion-sorting": {
            "dynamic programming": 8.0,
            "prefix sum for range sum calculation": 1.0,
            "2D array (DP table)": 1.0,
            "array": 4.0,
            "dynamic programming with bitmasking": 1.0,
            "bitmasking to represent task assignments": 1.0,
            "iterative DP table update": 1.0,
            "use of a set for O(1) lookups": 1.0,
            "bottom-up dynamic programming": 1.0,
            "set": 1.0,
            "preprocessing palindromic substrings": 1.0,
            "iterative DP table filling": 1.0,
            "2D array": 4.0,
            "1D array": 2.0,
            "in-place updates": 1.0,
            "tracking max/min products": 1.0,
            "variables": 2.0,
            "state reduction": 1.0,
            "iterative approach": 1.0,
            "precomputation of sums": 1.0,
            "iterative dynamic programming": 1.0,
            "bottom-up approach": 1.0,
            "precomputation of palindromes": 1.0,
            "precomputation of frequency sums": 1.0,
            "greedy algorithm": 1.0,
            "two-pass approach": 1.0
        },
        "algorithms-recursion-searching": {
            "breadth-first search (BFS)": 1.0,
            "state tracking with visited set": 1.0,
            "early exit upon reaching target": 1.0,
            "deque": 1.0,
            "set": 2.0,
            "recursive backtracking with trie": 1.0,
            "trie data structure to reduce search space": 1.0,
            "early termination when word is found": 1.0,
            "trie": 1.0,
            "backtracking": 2.0,
            "bit manipulation": 1.0,
            "boolean arrays": 2.0,
            "bitmask": 1.0,
            "pruning with leading zero check": 1.0,
            "list": 1.0,
            "dynamic programming": 1.0,
            "2D table for palindrome checking": 1.0,
            "1D table for minimum cuts": 1.0,
            "2D array": 1.0,
            "1D array": 1.0
        },
        "conditionals-dynamic_programming-error_handling-recursion": {
            "recursion with memoization": 4.0,
            "memoization to cache results of subproblems": 1.0,
            "set": 2.0,
            "dictionary": 4.0,
            "backtracking": 1.0,
            "pruning": 1.0,
            "early termination": 1.0,
            "2D array": 2.0,
            "dynamic programming with binary search": 1.0,
            "sorting": 2.0,
            "binary search for non-conflicting jobs": 1.0,
            "array": 2.0,
            "dynamic programming": 2.0,
            "precomputation of palindromes": 1.0,
            "iterative DP table filling": 1.0,
            "1D array": 1.0,
            "dynamic programming with memoization": 1.0,
            "list": 1.0,
            "dynamic programming with recursion": 2.0,
            "iterative approach": 1.0,
            "space optimization": 1.0,
            "memoization": 4.0,
            "2D list": 1.0,
            "set for fast lookup": 1.0
        },
        "algorithms-conditionals-error_handling": {
            "depth-first search (DFS)": 1.0,
            "backtracking": 1.0,
            "2D list": 1.0,
            "breadth-first search (BFS)": 2.0,
            "early stopping if target node is reached": 1.0,
            "defaultdict for adjacency list": 1.0,
            "deque for BFS queue": 1.0,
            "single pass greedy algorithm": 1.0,
            "tracking minimum price": 1.0,
            "conditional checks for fluctuations": 1.0,
            "variables": 1.0,
            "early exit on goal condition": 1.0,
            "use of teleportation points to reduce search space": 1.0,
            "deque": 1.0,
            "set": 1.0,
            "conditional checks": 1.0,
            "early error logging": 1.0,
            "list": 1.0
        },
        "algorithms-dynamic_programming-recursion": {
            "dynamic programming": 3.0,
            "tabulation": 1.0,
            "2D array": 2.0,
            "iterative approach": 1.0,
            "memoization": 1.0,
            "array": 1.0,
            "memoization with a 2D table": 1.0,
            "bottom-up approach": 1.0
        },
        "data_structures-error_handling-functions-recursion": {
            "recursion": 3.0,
            "tail recursion": 1.0,
            "list": 5.0,
            "stack-based validation": 1.0,
            "early exit on imbalance": 1.0,
            "stack": 2.0,
            "breadth-first search (BFS)": 1.0,
            "early exit upon reaching the target": 1.0,
            "using a queue for level-order traversal": 1.0,
            "deque": 1.0,
            "set": 4.0,
            "dictionary": 6.0,
            "recursive traversal": 1.0,
            "nonlocal variables for state tracking": 1.0,
            "recursive parsing": 1.0,
            "operator precedence handling": 1.0,
            "recursive descent parsing": 1.0,
            "iterative validation": 1.0,
            "single pass validation": 1.0,
            "use of sets for O(1) lookups": 1.0,
            "expression evaluation": 1.0,
            "string manipulation": 1.0,
            "index validation": 1.0,
            "string": 1.0,
            "depth-first search (DFS)": 1.0,
            "backtracking": 2.0,
            "2D list": 2.0,
            "early termination": 1.0,
            "recursive backtracking": 1.0,
            "recursive depth-first traversal": 1.0,
            "recursive validation": 1.0,
            "early exit on invalidity": 1.0,
            "expression tree construction and evaluation": 1.0,
            "recursive evaluation": 1.0,
            "stack-based tree construction": 1.0,
            "binary tree": 1.0,
            "early exit upon successful deletion": 1.0,
            "depth-first search (DFS) with recursion": 1.0,
            "backtracking to handle cycles": 1.0,
            "backtracking with trie": 1.0,
            "trie data structure for efficient prefix searching": 1.0,
            "backtracking to explore all paths": 1.0,
            "trie": 1.0
        },
        "data_structures-dynamic_programming-functions-sorting": {
            "two-pointer technique": 1.0,
            "linear merge": 1.0,
            "list": 1.0,
            "linear scan": 1.0,
            "single pass iteration": 1.0,
            "array": 3.0,
            "sorting": 1.0,
            "in-place sorting": 1.0,
            "set-based lookup": 1.0,
            "early termination": 1.0,
            "set for O(1) lookups": 1.0,
            "set": 1.0,
            "array manipulation": 1.0,
            "in-place modification": 1.0,
            "reversal algorithm": 1.0
        },
        "conditionals-data_structures-loops": {
            "dynamic programming": 2.0,
            "2D DP array": 1.0,
            "early return for edge case": 1.0,
            "2D array": 2.0,
            "Kadane's algorithm extension": 1.0,
            "prefix sum": 1.0,
            "1D Kadane's algorithm": 1.0,
            "array": 1.0,
            "prefix sum with hashmap": 1.0,
            "cumulative balance tracking": 1.0,
            "hashmap for quick lookups": 1.0,
            "hashmap": 1.0,
            "graph traversal with constraints": 1.0,
            "priority queue for maximum path tracking": 1.0,
            "early termination upon reaching destination": 1.0,
            "priority queue (max-heap)": 1.0,
            "dictionary": 1.0,
            "bottom-up approach": 1.0
        },
        "algorithms-conditionals-recursion-searching": {
            "recursive search": 1.0,
            "early return upon finding target": 1.0,
            "list": 2.0,
            "divide and conquer": 1.0,
            "binary search": 1.0,
            "recursive approach": 1.0,
            "2D array": 1.0,
            "depth-first search (DFS)": 2.0,
            "backtracking": 2.0,
            "2D grid (list of lists)": 1.0,
            "recursive DFS to explore paths": 1.0,
            "pruning invalid paths early": 1.0,
            "2D list": 1.0
        },
        "data_structures-functions-sorting": {
            "custom sorting": 1.0,
            "custom key function for sorting": 1.0,
            "dictionary": 1.0,
            "hashing": 1.0,
            "use of sorted string as a hash key": 1.0,
            "defaultdict": 1.0,
            "sorting with custom comparator": 1.0,
            "use of Counter for frequency counting": 1.0,
            "Counter (from collections)": 1.0,
            "list": 1.0
        },
        "conditionals-error_handling-sorting": {
            "comparison-based sorting with error checking": 1.0,
            "early exit on error detection": 1.0,
            "list": 5.0,
            "sorting with validation": 2.0,
            "custom sorting key": 1.0,
            "dictionary": 4.0,
            "early return on error detection": 1.0,
            "custom sorting with validation": 2.0,
            "early validation checks": 2.0,
            "use of sorting keys": 1.0,
            "preprocessing data for sorting": 1.0
        },
        "conditionals-data_structures-dynamic_programming-sorting": {
            "dynamic programming with stack": 1.0,
            "histogram representation": 1.0,
            "monotonic stack": 1.0,
            "array": 8.0,
            "stack": 1.0,
            "dynamic programming": 6.0,
            "iterative update of maximum product for subsequences": 1.0,
            "iterative approach": 2.0,
            "state transition": 1.0,
            "binary search for optimization": 2.0,
            "sorting tasks by end time": 1.0,
            "2D DP table to store intermediate results": 1.0,
            "2D array": 1.0,
            "dynamic programming with binary search": 1.0,
            "sorting": 2.0,
            "prefix sum with hashmap": 1.0,
            "cumulative sum tracking": 1.0,
            "hashmap for quick lookup": 1.0,
            "hashmap": 1.0,
            "binary search": 1.0,
            "binary search on answer": 1.0,
            "greedy partitioning": 1.0,
            "1D DP array": 1.0,
            "prefix sums for range sum calculation": 1.0,
            "2D array (DP table)": 1.0,
            "greedy algorithm": 1.0,
            "mathematical formula for scheduling": 1.0,
            "Counter from collections": 1.0,
            "sliding window": 2.0,
            "early termination for invalid subarrays": 1.0,
            "set": 1.0,
            "graph traversal and coloring": 1.0,
            "BFS for graph traversal": 1.0,
            "modular arithmetic for color assignment": 1.0,
            "defaultdict": 1.0,
            "deque": 1.0,
            "modified binary search with greedy approach": 1.0,
            "binary search for efficient position finding": 1.0,
            "list": 1.0,
            "two-pointer technique": 1.0
        },
        "algorithms-dynamic_programming-loops-searching": {
            "dynamic programming": 10.0,
            "use of dp array to store intermediate results": 1.0,
            "array": 7.0,
            "iterative update of dp array": 1.0,
            "iterative filling of dp table": 1.0,
            "2D array": 5.0,
            "bottom-up approach": 2.0,
            "iterative approach": 2.0,
            "state transition": 1.0,
            "greedy algorithm": 1.0,
            "tracking maximum reach": 1.0,
            "early stopping": 1.0,
            "recursive backtracking with memoization": 1.0,
            "memoization to avoid redundant calculations": 1.0,
            "set": 1.0,
            "dictionary": 2.0,
            "backtracking with depth-first search (DFS)": 1.0,
            "pruning by marking visited nodes": 1.0,
            "early termination when conditions are met": 1.0,
            "sliding window": 1.0,
            "dynamic window resizing": 1.0,
            "2D DP table": 1.0,
            "iterative filling": 1.0,
            "string manipulation with KMP algorithm": 1.0,
            "KMP algorithm for pattern matching": 1.0,
            "pre-sorting": 1.0,
            "cost calculation": 1.0,
            "precomputation of sums": 1.0,
            "2D array (DP table)": 1.0
        },
        "error_handling-functions-recursion": {
            "iteration": 1.0,
            "early exit on invalid input": 1.0,
            "dictionary": 2.0,
            "recursion": 2.0,
            "early termination on error": 1.0,
            "list": 2.0,
            "stack-based validation": 1.0,
            "early exit on mismatch": 1.0,
            "stack": 1.0,
            "backtracking": 1.0,
            "pruning using palindrome check": 1.0,
            "recursive traversal": 1.0
        },
        "algorithms-dynamic_programming-error_handling-sorting": {
            "dynamic programming": 7.0,
            "precomputation of costs": 1.0,
            "iterative filling of DP table": 1.0,
            "2D array (DP table)": 3.0,
            "greedy approach with linear scan": 1.0,
            "single pass with condition checks": 1.0,
            "local modification analysis": 1.0,
            "array": 5.0,
            "binary search with greedy partitioning": 1.0,
            "binary search": 1.0,
            "greedy validation": 1.0,
            "iterative DP table filling": 1.0,
            "2D array": 3.0,
            "dynamic programming with binary search": 1.0,
            "binary search for LIS": 1.0,
            "precomputation of LIS from both ends": 1.0,
            "2D DP table to track subsequence length with changes": 1.0,
            "state representation": 1.0,
            "transition optimization": 1.0,
            "dynamic programming table to track minimum fixes": 1.0,
            "early termination if fixes exceed k": 1.0,
            "state transition": 1.0,
            "cost minimization": 1.0,
            "backward iteration to prevent overwriting": 1.0,
            "use of sorted unique values to limit targets": 1.0
        },
        "conditionals-error_handling-searching-sorting": {
            "filtering and sorting": 11.0,
            "in-place sorting": 3.0,
            "list": 20.0,
            "dictionary": 13.0,
            "early filtering of ineligible students": 1.0,
            "early filtering": 3.0,
            "composite sorting keys": 1.0,
            "set for fast membership checking": 1.0,
            "set": 1.0,
            "conditional checks": 1.0,
            "conditional filtering": 1.0,
            "sorting by ID for consistent output": 1.0,
            "early return for invalid input": 1.0,
            "early return on error": 2.0,
            "conditional logic for query type": 1.0,
            "conditional filtering and sorting": 2.0,
            "conditional branching": 1.0,
            "early return": 1.0,
            "case-insensitive comparison": 1.0,
            "filter and sort": 2.0,
            "list comprehension for filtering": 6.0,
            "built-in sort for sorting": 1.0,
            "lambda function for sorting": 1.0,
            "built-in sort function": 1.0,
            "stable sort": 1.0,
            "filtering, sorting, and searching": 1.0,
            "binary search for efficient searching": 1.0,
            "filtering and binary search": 1.0,
            "binary search for efficient lookup": 3.0,
            "cleaning, custom sorting, binary search": 1.0,
            "custom sorting key": 1.0,
            "sorting and binary search": 1.0
        },
        "algorithms-error_handling-functions-recursion": {
            "recursive function calls": 1.0,
            "early return on error detection": 1.0,
            "dictionary": 2.0,
            "recursive traversal": 2.0,
            "avoid duplicates in file list": 1.0,
            "list": 4.0,
            "tail recursion": 2.0,
            "depth-first search (DFS)": 1.0,
            "backtracking": 1.0,
            "set": 1.0,
            "recursive evaluation": 1.0,
            "early return on error": 1.0
        },
        "data_structures-recursion-sorting": {
            "recursive merge sort": 1.0,
            "divide and conquer": 2.0,
            "recursive decomposition": 1.0,
            "list": 2.0,
            "quickselect algorithm": 1.0,
            "in-place partitioning": 1.0,
            "recursive divide and conquer": 1.0,
            "array": 1.0,
            "depth-first search (DFS) recursion": 1.0,
            "recursive depth tracking": 1.0,
            "recursive merging": 1.0,
            "binary merge": 1.0,
            "linked list": 1.0,
            "stack-based approach": 1.0,
            "use of stack to manage indices efficiently": 1.0,
            "stack": 1.0
        }
    }
}