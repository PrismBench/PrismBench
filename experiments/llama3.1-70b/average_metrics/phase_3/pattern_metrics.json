{
    "patterns_by_concept_group": {
        "dynamic_programming-loops": {
            "dynamic programming": 3.5,
            "iterative approach": 3.5,
            "constant space optimization": 2.0,
            "variables": 2.0,
            "array": 2.5,
            "space optimization using a single array": 1.0,
            "bottom-up approach": 1.0,
            "tabulation": 2.0,
            "iterative dynamic programming": 1.0,
            "list": 1.0,
            "2D array": 1.0,
            "mathematical formula": 1.0,
            "use of arithmetic series formula": 1.0
        },
        "conditionals-data_structures": {
            "set operations": 1.0,
            "use of set for O(1) average time complexity lookups": 1.0,
            "set": 1.0,
            "simple search": 1.0,
            "early exit using 'in' operator": 1.0,
            "list": 4.0,
            "linear search": 3.0,
            "early exit with 'in' operator": 1.0,
            "list comprehension": 1.0,
            "early exit": 1.0
        },
        "algorithms-conditionals": {
            "conditional check": 1.0,
            "conditional logic": 1.0,
            "ternary conditional operator": 1.0,
            "conditional branching": 1.0,
            "ternary conditional expressions": 1.0,
            "direct mapping": 1.0,
            "index-based access": 1.0,
            "list": 1.0,
            "conditional statements": 1.0,
            "none required for simple conditionals": 1.0,
            "none": 1.0
        },
        "conditionals-sorting": {
            "sorting and filtering": 1.0,
            "list comprehension for concise filtering": 1.0,
            "list": 5.0,
            "sorting and slicing": 1.0,
            "set for uniqueness": 1.0,
            "set": 2.0,
            "sorting and partitioning": 1.0,
            "set for duplicate removal": 1.0,
            "list slicing for partitioning": 1.0,
            "custom sorting": 1.0,
            "dictionary mapping for sorting": 1.0,
            "dictionary": 1.0,
            "sorting and categorization": 1.0,
            "list comprehension for filtering": 1.0
        },
        "functions-sorting": {
            "element-wise transformation followed by sorting": 1.0,
            "list comprehension for concise element transformation": 1.0,
            "list": 5.0,
            "sorting": 3.5,
            "use of built-in sort function": 1.0,
            "stable sort": 1.0,
            "utilizing built-in functions": 1.0,
            "use of key function for custom sorting": 1.0,
            "transformation and sorting": 1.0,
            "list comprehension": 1.0,
            "stable sorting": 1.0,
            "built-in sort function": 1.0,
            "set for uniqueness and sorting": 1.0,
            "use of set for uniqueness": 1.0,
            "set": 1.0
        },
        "dynamic_programming-functions": {
            "iterative dynamic programming": 1.0,
            "iterative approach": 3.0,
            "list": 1.0,
            "dynamic programming": 4.0,
            "tabulation": 1.0,
            "array": 1.5,
            "bottom-up approach": 2.0,
            "2D array": 1.5,
            "space optimization by using variables instead of arrays": 1.0,
            "variables": 1.0,
            "combinatorial mathematics": 1.0,
            "direct computation using combinatorial formula": 1.0
        },
        "algorithms-error_handling": {
            "linear search": 1.0,
            "list": 3.0,
            "simple iteration": 1.0,
            "use of built-in max function": 1.0,
            "validation and arithmetic calculation": 1.0,
            "early validation to avoid unnecessary computation": 1.0,
            "filtering and counting": 1.0,
            "list comprehension": 1.0,
            "input validation and string concatenation": 1.0,
            "early validation to prevent unnecessary processing": 1.0,
            "conditional checks": 1.0,
            "early return for error handling": 1.0,
            "primitive data types": 1.0,
            "type checking": 1.0,
            "early return": 1.0,
            "string": 1.0,
            "type checking and conditional logic": 1.0,
            "primitive types": 2.0,
            "input validation and arithmetic calculation": 1.0,
            "simple arithmetic conversion": 1.0,
            "direct calculation": 1.0
        },
        "algorithms-dynamic_programming": {
            "dynamic programming": 4.0,
            "iterative bottom-up approach": 1.0,
            "array": 4.0,
            "iterative approach": 1.0,
            "Kadane's algorithm": 1.0,
            "iterative update": 1.0,
            "single pass": 1.0,
            "tabulation": 2.0,
            "2D array": 1.0
        },
        "error_handling-recursion": {
            "recursion": 5.0,
            "base case optimization": 1.0,
            "none": 1.0,
            "base case to terminate recursion": 1.0,
            "integer": 3.0,
            "divide and conquer": 2.0,
            "string": 1.0,
            "tail recursion": 1.0
        },
        "recursion-sorting": {
            "recursion": 3.0,
            "array": 4.0,
            "none": 1.0,
            "early return": 1.0,
            "divide and conquer": 3.0,
            "list": 3.0,
            "recursive approach": 1.0,
            "recursive quicksort": 4.0,
            "quick sort (recursive)": 1.0
        },
        "recursion-searching": {
            "recursion": 4.5,
            "tail recursion": 2.0,
            "string": 2.0,
            "recursive linear search": 1.0,
            "none": 1.0,
            "array": 6.0,
            "divide and conquer": 4.5,
            "list": 3.0,
            "binary search": 3.0,
            "recursive approach": 2.0,
            "recursive binary search": 1.0
        },
        "dynamic_programming-recursion": {
            "dynamic programming": 5.0,
            "bottom-up approach": 2.0,
            "array": 3.0,
            "iterative approach": 1.0,
            "bottom-up dynamic programming": 1.0,
            "tabulation": 2.0,
            "2D array": 2.0
        },
        "searching-sorting": {
            "binary search": 1.0,
            "divide and conquer": 1.0,
            "array": 3.0,
            "direct access": 1.0,
            "leveraging sorted property": 1.0,
            "linear search": 1.0,
            "set conversion": 1.0,
            "set data structure for duplicate removal": 1.0,
            "set": 1.0,
            "simple merge and sort": 1.0,
            "none": 1.0,
            "list": 1.0
        },
        "dynamic_programming-sorting": {
            "sorting and pairing": 1.0,
            "sorting to maximize cost efficiency": 1.0,
            "list": 4.0,
            "sorting and linear search": 1.0,
            "built-in sort function": 1.0,
            "iterative traversal": 1.0,
            "single pass": 1.0,
            "array": 1.0,
            "sorting": 1.0,
            "sorting and set utilization": 1.0,
            "use of set to filter unique elements": 1.0,
            "set": 1.0
        },
        "error_handling-functions-sorting": {
            "filter and sort": 1.0,
            "early validation and filtering": 1.0,
            "list": 5.0,
            "filtering and set operations": 1.0,
            "set for uniqueness": 1.0,
            "list comprehension for filtering": 1.0,
            "set": 1.0,
            "iteration and filtering": 1.0,
            "early exit for invalid data": 1.0,
            "sorting": 1.0,
            "tuple": 2.0,
            "filtering and sorting": 1.0,
            "lambda function for sorting": 1.0
        },
        "algorithms-conditionals-error_handling": {
            "conditional logic": 2.0,
            "direct condition checks": 1.0,
            "none": 1.0,
            "conditional statements": 2.0,
            "conditional checks": 1.0,
            "primitive data types": 1.0
        },
        "loops-sorting": {
            "binary search with dynamic programming": 1.0,
            "binary search for insertion point": 1.0,
            "use of a dynamic list to track subsequence lengths": 1.0,
            "list": 4.0,
            "greedy approach": 1.0,
            "early termination": 1.0,
            "incremental updates": 1.0,
            "array": 1.0,
            "modified merge sort": 1.0,
            "divide and conquer": 1.0,
            "inversion counting during merge": 1.0,
            "sorting and selection": 1.0,
            "sorting for median calculation": 1.0,
            "sorting for closest elements selection": 1.0,
            "custom sorting": 1.0,
            "use of set for uniqueness": 1.0,
            "set": 1.0
        },
        "algorithms-loops": {
            "iteration and filtering": 1.0,
            "list comprehension": 1.0,
            "list": 5.0,
            "filter and accumulate": 1.0,
            "generator expression": 1.0,
            "iteration": 1.0,
            "linear search": 1.0,
            "early initialization of max_num": 1.0,
            "counting": 1.0,
            "built-in function usage": 1.0
        },
        "data_structures-dynamic_programming-searching": {
            "dynamic programming": 3.0,
            "iterative approach": 3.0,
            "array": 4.0,
            "iterative dynamic programming": 1.0,
            "tabulation": 1.0,
            "iterative filtering": 1.0,
            "early exit on non-vowel detection": 1.0,
            "list": 1.0,
            "reuse of previously computed results": 1.0
        },
        "algorithms-conditionals-functions": {
            "iteration with conditional checks": 1.0,
            "inline conditional check": 1.0,
            "array": 3.0,
            "linear search": 1.0,
            "early return for empty array": 1.0,
            "iteration and conditional filtering": 1.0,
            "early return for empty input": 1.0,
            "string manipulation": 1.0,
            "in-place filtering and transformation": 1.0,
            "string": 1.0,
            "iteration with conditionals": 1.0,
            "list": 1.0
        },
        "conditionals-error_handling": {
            "conditional logic": 2.5,
            "primitive types": 2.0,
            "conditional checks": 1.5,
            "short-circuit evaluation": 1.0,
            "string": 1.0,
            "primitive data types": 1.0,
            "early return for error handling": 2.0,
            "conditional statements": 2.0,
            "early return for invalid input": 1.0,
            "list": 1.0
        },
        "algorithms-conditionals-error_handling-searching": {
            "linear search": 3.0,
            "early exit with 'any' function": 1.0,
            "list": 4.0,
            "simple iteration": 1.0,
            "early return for empty list": 1.0,
            "set data structure for uniqueness check": 1.0,
            "using set to leverage O(1) average time complexity for membership checks": 1.0,
            "set": 1.0,
            "early exit upon finding the first positive number": 1.0
        },
        "algorithms-conditionals-loops": {
            "iteration with condition checking": 1.0,
            "use of set for O(1) membership checking": 1.0,
            "set": 1.0,
            "iteration with filtering": 1.0,
            "generator expression for efficient filtering and summation": 1.0,
            "list": 3.0,
            "linear search": 1.0,
            "generator expression": 1.0,
            "filtering and counting": 1.0,
            "list comprehension": 1.0,
            "string manipulation": 1.0,
            "slicing": 1.0,
            "string": 1.0
        },
        "loops-recursion-searching": {
            "recursion": 1.0,
            "recursive depth-first traversal": 1.0,
            "list": 2.0,
            "recursive backtracking": 1.0,
            "pruning": 1.0,
            "early termination": 1.0,
            "2D array": 1.0,
            "backtracking": 1.0,
            "recursive exploration": 1.0,
            "pruning invalid paths": 1.0,
            "sliding window": 1.0,
            "character counting": 1.0,
            "dictionary": 1.0
        },
        "algorithms-conditionals-functions-loops": {
            "iteration with conditional logic": 1.0,
            "list comprehension": 2.0,
            "list": 4.0,
            "single pass separation": 1.0,
            "iteration and conditional checks": 1.0,
            "early return is not applicable": 1.0,
            "minimal use of additional data structures": 1.0,
            "dictionary": 1.0,
            "iteration and conditional summation": 1.0,
            "single pass through the list": 1.0,
            "iteration": 1.0,
            "early return for empty list": 1.0
        },
        "error_handling-recursion-searching-sorting": {
            "recursive binary search": 1.0,
            "divide and conquer": 2.0,
            "array": 1.0,
            "recursive approach": 1.0,
            "list": 4.0,
            "recursive count": 1.0,
            "list comprehension": 1.0,
            "recursive search": 1.0,
            "recursive divide and conquer": 1.0,
            "divide array into halves": 1.0,
            "recursive accumulation": 1.0
        },
        "error_handling-loops": {
            "iteration and conditional filtering": 1.0,
            "list": 2.0,
            "iteration and filtering": 1.0,
            "early return for empty input": 1.0
        },
        "loops-searching": {
            "linear search": 3.0,
            "use of built-in function": 2.0,
            "list": 5.0,
            "list comprehension": 1.0,
            "simple traversal": 1.0,
            "short-circuit evaluation": 1.0,
            "simple aggregation": 1.0,
            "built-in function usage": 1.0
        },
        "conditionals-recursion": {
            "conditional check": 1.0,
            "recursion": 4.0,
            "tail recursion not utilized": 1.0,
            "integers": 1.0,
            "base case to prevent infinite recursion": 1.0,
            "none": 1.0,
            "tail recursion not optimized in Python": 1.0,
            "string": 1.0,
            "divide and conquer": 1.0,
            "list": 1.0
        },
        "conditionals-dynamic_programming": {
            "dynamic programming": 5.0,
            "iterative approach": 1.0,
            "space optimization using a single array": 1.0,
            "array": 2.0,
            "bottom-up approach": 3.0,
            "2D array": 2.0,
            "memoization": 1.0,
            "dictionary": 1.0
        },
        "algorithms-functions": {
            "iteration and conditional checking": 1.0,
            "case normalization": 2.0,
            "string": 3.0,
            "two-pointer technique": 2.0,
            "in-place modification": 1.0,
            "list": 1.0,
            "iteration over string representation": 1.0,
            "direct iteration over string": 1.0,
            "in-place character comparison": 1.0,
            "frequency counting": 1.0,
            "dictionary": 1.0
        },
        "functions-searching": {
            "linear search": 4.0,
            "input validation": 1.0,
            "range filtering": 1.0,
            "list": 1.0,
            "array": 3.0,
            "early initialization": 1.0,
            "early exit upon condition met": 1.0
        },
        "data_structures-dynamic_programming": {
            "dynamic programming": 3.0,
            "iterative approach": 2.0,
            "storing intermediate results": 1.0,
            "array": 3.0,
            "tabulation": 1.0,
            "bottom-up approach": 1.0
        },
        "algorithms-recursion": {
            "recursion": 5.0,
            "divide and conquer": 2.0,
            "integer": 2.0,
            "base case optimization": 1.0,
            "string": 2.0,
            "tail recursion not utilized": 1.0
        },
        "error_handling-searching": {
            "binary search": 2.0,
            "divide and conquer": 2.0,
            "array": 3.0,
            "linear search": 3.0,
            "early exit on match": 1.0,
            "list": 1.0,
            "early exit upon finding target": 1.0,
            "string": 1.0
        },
        "data_structures-error_handling": {
            "object-oriented design": 1.0,
            "direct list operations for stack management": 1.0,
            "list": 4.0,
            "queue operations": 1.0,
            "sorting-based priority queue": 1.0,
            "sorting on insertion": 1.0,
            "sequential processing": 1.0,
            "early return in remove and get operations": 1.0,
            "dictionary operations": 1.0,
            "direct dictionary access for O(1) complexity": 1.0,
            "dictionary": 1.0
        },
        "conditionals-error_handling-recursion": {
            "recursion": 2.0,
            "primitive data types": 1.0,
            "list": 1.0
        },
        "algorithms-dynamic_programming-error_handling-loops": {
            "iterative approach": 4.0,
            "space optimization by using constant space": 1.0,
            "variables": 3.0,
            "dynamic programming": 4.0,
            "space optimization by using two variables": 1.0,
            "iterative table filling": 1.0,
            "2D array": 1.0,
            "space optimization by using two variables instead of an array": 1.0,
            "array": 1.0
        },
        "algorithms-data_structures-dynamic_programming-sorting": {
            "dynamic programming": 3.0,
            "iterative approach": 1.0,
            "space optimization by using variables instead of arrays": 1.0,
            "variables": 1.0,
            "tracking previous elements for reconstruction": 1.0,
            "array": 1.0,
            "sweep line algorithm": 1.0,
            "sorting": 1.0,
            "event-based processing": 1.0,
            "list": 1.0,
            "iterative computation": 1.0,
            "2D array": 1.0,
            "monotonic stack": 1.0,
            "single pass": 1.0,
            "stack-based approach": 1.0,
            "stack": 1.0
        },
        "algorithms-data_structures-functions": {
            "iterative summation": 1.0,
            "array": 4.0,
            "iteration": 2.0,
            "linear search": 1.0,
            "single pass": 1.0,
            "string": 3.0,
            "two-pointer technique": 2.0,
            "early exit on mismatch": 1.0,
            "set-based uniqueness check": 1.0,
            "use of set to eliminate duplicates": 1.0,
            "set": 2.0,
            "hashing": 1.0,
            "sorting for key generation": 1.0,
            "dictionary": 1.0,
            "set data structure for uniqueness": 1.0,
            "use of set to eliminate duplicates efficiently": 1.0,
            "in-place merging": 1.0,
            "recursive palindrome check": 1.0,
            "string cleaning": 1.0,
            "recursive comparison": 1.0
        }
    },
    "patterns_by_difficulty": {
        "very easy": {
            "dynamic programming": 11.666666666666666,
            "iterative approach": 7.0,
            "constant space optimization": 2.0,
            "variables": 1.5,
            "array": 14.333333333333334,
            "space optimization using a single array": 1.0,
            "set operations": 1.0,
            "use of set for O(1) average time complexity lookups": 1.0,
            "set": 3.0,
            "simple search": 1.0,
            "early exit using 'in' operator": 1.0,
            "list": 21.666666666666668,
            "linear search": 5.666666666666667,
            "early exit with 'in' operator": 1.0,
            "list comprehension": 1.6666666666666667,
            "early exit": 1.0,
            "conditional check": 1.0,
            "conditional logic": 2.5,
            "ternary conditional operator": 1.0,
            "conditional branching": 1.0,
            "ternary conditional expressions": 1.0,
            "direct mapping": 1.0,
            "index-based access": 1.0,
            "conditional statements": 2.5,
            "none required for simple conditionals": 1.0,
            "none": 3.5,
            "sorting and filtering": 1.0,
            "list comprehension for concise filtering": 1.0,
            "sorting and slicing": 1.0,
            "set for uniqueness": 1.0,
            "sorting and partitioning": 1.0,
            "set for duplicate removal": 1.0,
            "list slicing for partitioning": 1.0,
            "custom sorting": 1.0,
            "dictionary mapping for sorting": 1.0,
            "dictionary": 1.5,
            "sorting and categorization": 1.0,
            "list comprehension for filtering": 1.0,
            "element-wise transformation followed by sorting": 1.0,
            "list comprehension for concise element transformation": 1.0,
            "sorting": 4.0,
            "use of built-in sort function": 1.0,
            "stable sort": 1.0,
            "utilizing built-in functions": 1.0,
            "use of key function for custom sorting": 1.0,
            "iterative dynamic programming": 1.0,
            "tabulation": 3.0,
            "bottom-up approach": 4.5,
            "2D array": 4.5,
            "simple iteration": 1.0,
            "use of built-in max function": 1.0,
            "validation and arithmetic calculation": 1.0,
            "early validation to avoid unnecessary computation": 1.0,
            "filtering and counting": 1.0,
            "input validation and string concatenation": 1.0,
            "early validation to prevent unnecessary processing": 1.0,
            "iterative bottom-up approach": 1.0,
            "Kadane's algorithm": 1.0,
            "iterative update": 1.0,
            "single pass": 1.5,
            "recursion": 15.5,
            "base case optimization": 1.0,
            "base case to terminate recursion": 1.0,
            "integer": 2.5,
            "divide and conquer": 9.5,
            "string": 6.5,
            "tail recursion": 3.0,
            "early return": 1.0,
            "recursive approach": 1.0,
            "recursive linear search": 1.0,
            "bottom-up dynamic programming": 1.0,
            "binary search": 1.5,
            "direct access": 1.0,
            "leveraging sorted property": 1.0,
            "set conversion": 1.0,
            "set data structure for duplicate removal": 1.0,
            "simple merge and sort": 1.0,
            "sorting and pairing": 1.0,
            "sorting to maximize cost efficiency": 1.0,
            "sorting and linear search": 1.0,
            "built-in sort function": 1.0,
            "iterative traversal": 1.0,
            "sorting and set utilization": 1.0,
            "use of set to filter unique elements": 1.0,
            "direct condition checks": 1.0,
            "conditional checks": 1.5,
            "primitive data types": 1.5,
            "iteration and filtering": 1.0,
            "filter and accumulate": 1.0,
            "generator expression": 1.0,
            "iteration": 1.5,
            "early initialization of max_num": 1.0,
            "counting": 1.0,
            "built-in function usage": 1.0,
            "transformation and sorting": 1.0,
            "stable sorting": 1.0,
            "set for uniqueness and sorting": 1.0,
            "use of set for uniqueness": 1.0,
            "iterative filtering": 1.0,
            "early exit on non-vowel detection": 1.0,
            "reuse of previously computed results": 1.0,
            "iteration and conditional filtering": 1.0,
            "early return for empty input": 1.0,
            "use of built-in function": 2.0,
            "simple traversal": 1.0,
            "short-circuit evaluation": 1.0,
            "simple aggregation": 1.0,
            "mathematical formula": 1.0,
            "use of arithmetic series formula": 1.0,
            "early return for error handling": 3.0,
            "early return for invalid input": 1.0,
            "tail recursion not utilized": 2.0,
            "integers": 1.0,
            "base case to prevent infinite recursion": 1.0,
            "tail recursion not optimized in Python": 1.0,
            "memoization": 1.0,
            "iteration and conditional checking": 1.0,
            "case normalization": 2.0,
            "two-pointer technique": 3.0,
            "in-place modification": 1.0,
            "iteration over string representation": 1.0,
            "direct iteration over string": 1.0,
            "in-place character comparison": 1.0,
            "frequency counting": 1.0,
            "input validation": 1.0,
            "range filtering": 1.0,
            "early initialization": 1.0,
            "early exit upon condition met": 1.0,
            "space optimization by using variables instead of arrays": 1.0,
            "combinatorial mathematics": 1.0,
            "direct computation using combinatorial formula": 1.0,
            "storing intermediate results": 1.0,
            "type checking": 1.0,
            "type checking and conditional logic": 1.0,
            "primitive types": 2.0,
            "input validation and arithmetic calculation": 1.0,
            "simple arithmetic conversion": 1.0,
            "direct calculation": 1.0,
            "early exit on match": 1.0,
            "early exit upon finding target": 1.0,
            "recursive quicksort": 4.0,
            "quick sort (recursive)": 1.0,
            "iterative summation": 1.0,
            "early exit on mismatch": 1.0
        },
        "easy": {
            "filter and sort": 1.0,
            "early validation and filtering": 1.0,
            "list": 8.333333333333334,
            "filtering and set operations": 1.0,
            "set for uniqueness": 1.0,
            "list comprehension for filtering": 1.0,
            "set": 1.6666666666666667,
            "iteration and filtering": 1.0,
            "early exit for invalid data": 1.0,
            "sorting": 1.0,
            "tuple": 2.0,
            "filtering and sorting": 1.0,
            "lambda function for sorting": 1.0,
            "binary search": 3.0,
            "divide and conquer": 3.0,
            "array": 3.3333333333333335,
            "recursive approach": 1.5,
            "recursive binary search": 1.0,
            "iteration with conditional checks": 1.0,
            "inline conditional check": 1.0,
            "linear search": 5.0,
            "early return for empty array": 1.0,
            "iteration and conditional filtering": 1.0,
            "early return for empty input": 1.0,
            "string manipulation": 2.0,
            "in-place filtering and transformation": 1.0,
            "string": 2.0,
            "iteration with conditionals": 1.0,
            "conditional logic": 3.0,
            "primitive types": 2.0,
            "conditional checks": 2.0,
            "short-circuit evaluation": 1.0,
            "primitive data types": 1.0,
            "early exit with 'any' function": 1.0,
            "simple iteration": 1.0,
            "early return for empty list": 2.0,
            "set data structure for uniqueness check": 1.0,
            "using set to leverage O(1) average time complexity for membership checks": 1.0,
            "early exit upon finding the first positive number": 1.0,
            "iteration with condition checking": 1.0,
            "use of set for O(1) membership checking": 1.0,
            "iteration with filtering": 1.0,
            "generator expression for efficient filtering and summation": 1.0,
            "generator expression": 1.0,
            "filtering and counting": 1.0,
            "list comprehension": 4.0,
            "slicing": 1.0,
            "iteration with conditional logic": 1.0,
            "single pass separation": 1.0,
            "iteration and conditional checks": 1.0,
            "early return is not applicable": 1.0,
            "minimal use of additional data structures": 1.0,
            "dictionary": 1.5,
            "iteration and conditional summation": 1.0,
            "single pass through the list": 1.0,
            "iteration": 1.0,
            "recursive count": 1.0,
            "recursive search": 1.0,
            "recursive divide and conquer": 1.0,
            "divide array into halves": 1.0,
            "recursive accumulation": 1.0,
            "object-oriented design": 1.0,
            "direct list operations for stack management": 1.0,
            "queue operations": 1.0,
            "sorting-based priority queue": 1.0,
            "sorting on insertion": 1.0,
            "sequential processing": 1.0,
            "early return in remove and get operations": 1.0,
            "dictionary operations": 1.0,
            "direct dictionary access for O(1) complexity": 1.0,
            "iterative approach": 4.0,
            "space optimization by using constant space": 1.0,
            "variables": 3.0,
            "dynamic programming": 4.0,
            "space optimization by using two variables": 1.0,
            "iterative table filling": 1.0,
            "2D array": 1.0,
            "space optimization by using two variables instead of an array": 1.0,
            "set-based uniqueness check": 1.0,
            "use of set to eliminate duplicates": 1.0,
            "hashing": 1.0,
            "sorting for key generation": 1.0,
            "set data structure for uniqueness": 1.0,
            "use of set to eliminate duplicates efficiently": 1.0,
            "two-pointer technique": 1.0,
            "in-place merging": 1.0,
            "recursive palindrome check": 1.0,
            "string cleaning": 1.0,
            "recursive comparison": 1.0
        },
        "very hard": {
            "binary search with dynamic programming": 1.0,
            "binary search for insertion point": 1.0,
            "use of a dynamic list to track subsequence lengths": 1.0,
            "list": 4.0,
            "greedy approach": 1.0,
            "early termination": 1.0,
            "incremental updates": 1.0,
            "array": 1.0,
            "modified merge sort": 1.0,
            "divide and conquer": 1.0,
            "inversion counting during merge": 1.0,
            "sorting and selection": 1.0,
            "sorting for median calculation": 1.0,
            "sorting for closest elements selection": 1.0,
            "custom sorting": 1.0,
            "use of set for uniqueness": 1.0,
            "set": 1.0
        },
        "medium": {
            "recursion": 1.0,
            "recursive depth-first traversal": 1.0,
            "list": 2.0,
            "recursive backtracking": 1.0,
            "pruning": 1.0,
            "early termination": 1.0,
            "2D array": 1.0,
            "backtracking": 1.0,
            "recursive exploration": 1.0,
            "pruning invalid paths": 1.0,
            "sliding window": 1.0,
            "character counting": 1.0,
            "dictionary": 1.0
        },
        "hard": {
            "dynamic programming": 3.0,
            "iterative approach": 1.0,
            "space optimization by using variables instead of arrays": 1.0,
            "variables": 1.0,
            "tracking previous elements for reconstruction": 1.0,
            "array": 1.0,
            "sweep line algorithm": 1.0,
            "sorting": 1.0,
            "event-based processing": 1.0,
            "list": 1.0,
            "iterative computation": 1.0,
            "2D array": 1.0,
            "monotonic stack": 1.0,
            "single pass": 1.0,
            "stack-based approach": 1.0,
            "stack": 1.0
        }
    },
    "total_patterns": {
        "dynamic programming": 14.0,
        "iterative approach": 8.666666666666666,
        "constant space optimization": 2.0,
        "variables": 3.5,
        "array": 18.333333333333332,
        "space optimization using a single array": 1.0,
        "set operations": 1.0,
        "use of set for O(1) average time complexity lookups": 1.0,
        "set": 4.0,
        "simple search": 1.0,
        "early exit using 'in' operator": 1.0,
        "list": 32.333333333333336,
        "linear search": 7.333333333333333,
        "early exit with 'in' operator": 1.0,
        "list comprehension": 3.0,
        "early exit": 1.0,
        "conditional check": 1.0,
        "conditional logic": 2.6666666666666665,
        "ternary conditional operator": 1.0,
        "conditional branching": 1.0,
        "ternary conditional expressions": 1.0,
        "direct mapping": 1.0,
        "index-based access": 1.0,
        "conditional statements": 2.5,
        "none required for simple conditionals": 1.0,
        "none": 3.5,
        "sorting and filtering": 1.0,
        "list comprehension for concise filtering": 1.0,
        "sorting and slicing": 1.0,
        "set for uniqueness": 2.0,
        "sorting and partitioning": 1.0,
        "set for duplicate removal": 1.0,
        "list slicing for partitioning": 1.0,
        "custom sorting": 2.0,
        "dictionary mapping for sorting": 1.0,
        "dictionary": 2.3333333333333335,
        "sorting and categorization": 1.0,
        "list comprehension for filtering": 2.0,
        "element-wise transformation followed by sorting": 1.0,
        "list comprehension for concise element transformation": 1.0,
        "sorting": 3.3333333333333335,
        "use of built-in sort function": 1.0,
        "stable sort": 1.0,
        "utilizing built-in functions": 1.0,
        "use of key function for custom sorting": 1.0,
        "iterative dynamic programming": 1.0,
        "tabulation": 3.0,
        "bottom-up approach": 4.5,
        "2D array": 4.0,
        "simple iteration": 1.0,
        "use of built-in max function": 1.0,
        "validation and arithmetic calculation": 1.0,
        "early validation to avoid unnecessary computation": 1.0,
        "filtering and counting": 1.0,
        "input validation and string concatenation": 1.0,
        "early validation to prevent unnecessary processing": 1.0,
        "iterative bottom-up approach": 1.0,
        "Kadane's algorithm": 1.0,
        "iterative update": 1.0,
        "single pass": 2.0,
        "recursion": 10.666666666666666,
        "base case optimization": 1.0,
        "base case to terminate recursion": 1.0,
        "integer": 2.5,
        "divide and conquer": 8.666666666666666,
        "string": 5.666666666666667,
        "tail recursion": 3.0,
        "early return": 1.0,
        "recursive approach": 2.0,
        "recursive linear search": 1.0,
        "bottom-up dynamic programming": 1.0,
        "binary search": 3.0,
        "direct access": 1.0,
        "leveraging sorted property": 1.0,
        "set conversion": 1.0,
        "set data structure for duplicate removal": 1.0,
        "simple merge and sort": 1.0,
        "sorting and pairing": 1.0,
        "sorting to maximize cost efficiency": 1.0,
        "sorting and linear search": 1.0,
        "built-in sort function": 1.0,
        "iterative traversal": 1.0,
        "sorting and set utilization": 1.0,
        "use of set to filter unique elements": 1.0,
        "filter and sort": 1.0,
        "early validation and filtering": 1.0,
        "filtering and set operations": 1.0,
        "iteration and filtering": 1.0,
        "early exit for invalid data": 1.0,
        "tuple": 2.0,
        "filtering and sorting": 1.0,
        "lambda function for sorting": 1.0,
        "direct condition checks": 1.0,
        "conditional checks": 1.6666666666666667,
        "primitive data types": 1.3333333333333333,
        "recursive binary search": 1.0,
        "binary search with dynamic programming": 1.0,
        "binary search for insertion point": 1.0,
        "use of a dynamic list to track subsequence lengths": 1.0,
        "greedy approach": 1.0,
        "early termination": 1.0,
        "incremental updates": 1.0,
        "modified merge sort": 1.0,
        "inversion counting during merge": 1.0,
        "sorting and selection": 1.0,
        "sorting for median calculation": 1.0,
        "sorting for closest elements selection": 1.0,
        "use of set for uniqueness": 1.0,
        "filter and accumulate": 1.0,
        "generator expression": 2.0,
        "iteration": 2.0,
        "early initialization of max_num": 1.0,
        "counting": 1.0,
        "built-in function usage": 1.0,
        "transformation and sorting": 1.0,
        "stable sorting": 1.0,
        "set for uniqueness and sorting": 1.0,
        "iterative filtering": 1.0,
        "early exit on non-vowel detection": 1.0,
        "reuse of previously computed results": 1.0,
        "iteration with conditional checks": 1.0,
        "inline conditional check": 1.0,
        "early return for empty array": 1.0,
        "iteration and conditional filtering": 1.0,
        "early return for empty input": 1.0,
        "string manipulation": 2.0,
        "in-place filtering and transformation": 1.0,
        "iteration with conditionals": 1.0,
        "primitive types": 2.0,
        "short-circuit evaluation": 1.0,
        "early exit with 'any' function": 1.0,
        "early return for empty list": 2.0,
        "set data structure for uniqueness check": 1.0,
        "using set to leverage O(1) average time complexity for membership checks": 1.0,
        "early exit upon finding the first positive number": 1.0,
        "iteration with condition checking": 1.0,
        "use of set for O(1) membership checking": 1.0,
        "iteration with filtering": 1.0,
        "generator expression for efficient filtering and summation": 1.0,
        "slicing": 1.0,
        "recursive depth-first traversal": 1.0,
        "recursive backtracking": 1.0,
        "pruning": 1.0,
        "backtracking": 1.0,
        "recursive exploration": 1.0,
        "pruning invalid paths": 1.0,
        "sliding window": 1.0,
        "character counting": 1.0,
        "iteration with conditional logic": 1.0,
        "single pass separation": 1.0,
        "iteration and conditional checks": 1.0,
        "early return is not applicable": 1.0,
        "minimal use of additional data structures": 1.0,
        "iteration and conditional summation": 1.0,
        "single pass through the list": 1.0,
        "recursive count": 1.0,
        "recursive search": 1.0,
        "recursive divide and conquer": 1.0,
        "divide array into halves": 1.0,
        "recursive accumulation": 1.0,
        "use of built-in function": 2.0,
        "simple traversal": 1.0,
        "simple aggregation": 1.0,
        "mathematical formula": 1.0,
        "use of arithmetic series formula": 1.0,
        "early return for error handling": 3.0,
        "early return for invalid input": 1.0,
        "tail recursion not utilized": 2.0,
        "integers": 1.0,
        "base case to prevent infinite recursion": 1.0,
        "tail recursion not optimized in Python": 1.0,
        "memoization": 1.0,
        "iteration and conditional checking": 1.0,
        "case normalization": 2.0,
        "two-pointer technique": 4.0,
        "in-place modification": 1.0,
        "iteration over string representation": 1.0,
        "direct iteration over string": 1.0,
        "in-place character comparison": 1.0,
        "frequency counting": 1.0,
        "input validation": 1.0,
        "range filtering": 1.0,
        "early initialization": 1.0,
        "early exit upon condition met": 1.0,
        "space optimization by using variables instead of arrays": 2.0,
        "combinatorial mathematics": 1.0,
        "direct computation using combinatorial formula": 1.0,
        "storing intermediate results": 1.0,
        "type checking": 1.0,
        "type checking and conditional logic": 1.0,
        "input validation and arithmetic calculation": 1.0,
        "simple arithmetic conversion": 1.0,
        "direct calculation": 1.0,
        "early exit on match": 1.0,
        "early exit upon finding target": 1.0,
        "recursive quicksort": 4.0,
        "quick sort (recursive)": 1.0,
        "object-oriented design": 1.0,
        "direct list operations for stack management": 1.0,
        "queue operations": 1.0,
        "sorting-based priority queue": 1.0,
        "sorting on insertion": 1.0,
        "sequential processing": 1.0,
        "early return in remove and get operations": 1.0,
        "dictionary operations": 1.0,
        "direct dictionary access for O(1) complexity": 1.0,
        "space optimization by using constant space": 1.0,
        "space optimization by using two variables": 1.0,
        "iterative table filling": 1.0,
        "space optimization by using two variables instead of an array": 1.0,
        "tracking previous elements for reconstruction": 1.0,
        "sweep line algorithm": 1.0,
        "event-based processing": 1.0,
        "iterative computation": 1.0,
        "monotonic stack": 1.0,
        "stack-based approach": 1.0,
        "stack": 1.0,
        "iterative summation": 1.0,
        "early exit on mismatch": 1.0,
        "set-based uniqueness check": 1.0,
        "use of set to eliminate duplicates": 1.0,
        "hashing": 1.0,
        "sorting for key generation": 1.0,
        "set data structure for uniqueness": 1.0,
        "use of set to eliminate duplicates efficiently": 1.0,
        "in-place merging": 1.0,
        "recursive palindrome check": 1.0,
        "string cleaning": 1.0,
        "recursive comparison": 1.0
    },
    "comparative_analysis": {
        "dynamic_programming-loops-very easy": {
            "success_rate": 0.1,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 3.5,
                "iterative approach": 3.5,
                "constant space optimization": 2.0,
                "variables": 2.0,
                "array": 2.5,
                "space optimization using a single array": 1.0,
                "bottom-up approach": 1.0,
                "tabulation": 2.0,
                "iterative dynamic programming": 1.0,
                "list": 1.0,
                "2D array": 1.0,
                "mathematical formula": 1.0,
                "use of arithmetic series formula": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 1.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-data_structures-very easy": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "set operations": 1.0,
                "use of set for O(1) average time complexity lookups": 1.0,
                "set": 1.0,
                "simple search": 1.0,
                "early exit using 'in' operator": 1.0,
                "list": 4.0,
                "linear search": 3.0,
                "early exit with 'in' operator": 1.0,
                "list comprehension": 1.0,
                "early exit": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-conditionals-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "conditional check": 1.0,
                "conditional logic": 1.0,
                "ternary conditional operator": 1.0,
                "conditional branching": 1.0,
                "ternary conditional expressions": 1.0,
                "direct mapping": 1.0,
                "index-based access": 1.0,
                "list": 1.0,
                "conditional statements": 1.0,
                "none required for simple conditionals": 1.0,
                "none": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-sorting-very easy": {
            "success_rate": 0.4,
            "avg_attempts": 3.0,
            "patterns": {
                "sorting and filtering": 1.0,
                "list comprehension for concise filtering": 1.0,
                "list": 5.0,
                "sorting and slicing": 1.0,
                "set for uniqueness": 1.0,
                "set": 2.0,
                "sorting and partitioning": 1.0,
                "set for duplicate removal": 1.0,
                "list slicing for partitioning": 1.0,
                "custom sorting": 1.0,
                "dictionary mapping for sorting": 1.0,
                "dictionary": 1.0,
                "sorting and categorization": 1.0,
                "list comprehension for filtering": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "functions-sorting-very easy": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "element-wise transformation followed by sorting": 1.0,
                "list comprehension for concise element transformation": 1.0,
                "list": 5.0,
                "sorting": 3.5,
                "use of built-in sort function": 1.0,
                "stable sort": 1.0,
                "utilizing built-in functions": 1.0,
                "use of key function for custom sorting": 1.0,
                "transformation and sorting": 1.0,
                "list comprehension": 1.0,
                "stable sorting": 1.0,
                "built-in sort function": 1.0,
                "set for uniqueness and sorting": 1.0,
                "use of set for uniqueness": 1.0,
                "set": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "dynamic_programming-functions-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "iterative dynamic programming": 1.0,
                "iterative approach": 3.0,
                "list": 1.0,
                "dynamic programming": 4.0,
                "tabulation": 1.0,
                "array": 1.5,
                "bottom-up approach": 2.0,
                "2D array": 1.5,
                "space optimization by using variables instead of arrays": 1.0,
                "variables": 1.0,
                "combinatorial mathematics": 1.0,
                "direct computation using combinatorial formula": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.5,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-error_handling-very easy": {
            "success_rate": 0.1,
            "avg_attempts": 3.0,
            "patterns": {
                "linear search": 1.0,
                "list": 3.0,
                "simple iteration": 1.0,
                "use of built-in max function": 1.0,
                "validation and arithmetic calculation": 1.0,
                "early validation to avoid unnecessary computation": 1.0,
                "filtering and counting": 1.0,
                "list comprehension": 1.0,
                "input validation and string concatenation": 1.0,
                "early validation to prevent unnecessary processing": 1.0,
                "conditional checks": 1.0,
                "early return for error handling": 1.0,
                "primitive data types": 1.0,
                "type checking": 1.0,
                "early return": 1.0,
                "string": 1.0,
                "type checking and conditional logic": 1.0,
                "primitive types": 2.0,
                "input validation and arithmetic calculation": 1.0,
                "simple arithmetic conversion": 1.0,
                "direct calculation": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 4.0,
                "iterative bottom-up approach": 1.0,
                "array": 4.0,
                "iterative approach": 1.0,
                "Kadane's algorithm": 1.0,
                "iterative update": 1.0,
                "single pass": 1.0,
                "tabulation": 2.0,
                "2D array": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 1.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "error_handling-recursion-very easy": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "recursion": 5.0,
                "base case optimization": 1.0,
                "none": 1.0,
                "base case to terminate recursion": 1.0,
                "integer": 3.0,
                "divide and conquer": 2.0,
                "string": 1.0,
                "tail recursion": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 1.0,
                "implementation_patterns": 0.0
            }
        },
        "recursion-sorting-very easy": {
            "success_rate": 0.6,
            "avg_attempts": 3.0,
            "patterns": {
                "recursion": 3.0,
                "array": 4.0,
                "none": 1.0,
                "early return": 1.0,
                "divide and conquer": 3.0,
                "list": 3.0,
                "recursive approach": 1.0,
                "recursive quicksort": 4.0,
                "quick sort (recursive)": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "recursion-searching-very easy": {
            "success_rate": 0.3,
            "avg_attempts": 3.0,
            "patterns": {
                "recursion": 4.5,
                "tail recursion": 2.0,
                "string": 2.0,
                "recursive linear search": 1.0,
                "none": 1.0,
                "array": 2.0,
                "divide and conquer": 2.5,
                "list": 3.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "dynamic_programming-recursion-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 5.0,
                "bottom-up approach": 2.0,
                "array": 3.0,
                "iterative approach": 1.0,
                "bottom-up dynamic programming": 1.0,
                "tabulation": 2.0,
                "2D array": 2.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "searching-sorting-very easy": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "binary search": 1.0,
                "divide and conquer": 1.0,
                "array": 3.0,
                "direct access": 1.0,
                "leveraging sorted property": 1.0,
                "linear search": 1.0,
                "set conversion": 1.0,
                "set data structure for duplicate removal": 1.0,
                "set": 1.0,
                "simple merge and sort": 1.0,
                "none": 1.0,
                "list": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 1.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "dynamic_programming-sorting-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "sorting and pairing": 1.0,
                "sorting to maximize cost efficiency": 1.0,
                "list": 4.0,
                "sorting and linear search": 1.0,
                "built-in sort function": 1.0,
                "iterative traversal": 1.0,
                "single pass": 1.0,
                "array": 1.0,
                "sorting": 1.0,
                "sorting and set utilization": 1.0,
                "use of set to filter unique elements": 1.0,
                "set": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "error_handling-functions-sorting-easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "filter and sort": 1.0,
                "early validation and filtering": 1.0,
                "list": 5.0,
                "filtering and set operations": 1.0,
                "set for uniqueness": 1.0,
                "list comprehension for filtering": 1.0,
                "set": 1.0,
                "iteration and filtering": 1.0,
                "early exit for invalid data": 1.0,
                "sorting": 1.0,
                "tuple": 2.0,
                "filtering and sorting": 1.0,
                "lambda function for sorting": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-conditionals-error_handling-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "conditional logic": 2.0,
                "direct condition checks": 1.0,
                "none": 1.0,
                "conditional statements": 2.0,
                "conditional checks": 1.0,
                "primitive data types": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "recursion-searching-easy": {
            "success_rate": 0.4,
            "avg_attempts": 3.0,
            "patterns": {
                "binary search": 3.0,
                "divide and conquer": 4.0,
                "array": 4.0,
                "recursive approach": 2.0,
                "recursive binary search": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "loops-sorting-very hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "binary search with dynamic programming": 1.0,
                "binary search for insertion point": 1.0,
                "use of a dynamic list to track subsequence lengths": 1.0,
                "list": 4.0,
                "greedy approach": 1.0,
                "early termination": 1.0,
                "incremental updates": 1.0,
                "array": 1.0,
                "modified merge sort": 1.0,
                "divide and conquer": 1.0,
                "inversion counting during merge": 1.0,
                "sorting and selection": 1.0,
                "sorting for median calculation": 1.0,
                "sorting for closest elements selection": 1.0,
                "custom sorting": 1.0,
                "use of set for uniqueness": 1.0,
                "set": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-loops-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "iteration and filtering": 1.0,
                "list comprehension": 1.0,
                "list": 5.0,
                "filter and accumulate": 1.0,
                "generator expression": 1.0,
                "iteration": 1.0,
                "linear search": 1.0,
                "early initialization of max_num": 1.0,
                "counting": 1.0,
                "built-in function usage": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "data_structures-dynamic_programming-searching-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 3.0,
                "iterative approach": 3.0,
                "array": 4.0,
                "iterative dynamic programming": 1.0,
                "tabulation": 1.0,
                "iterative filtering": 1.0,
                "early exit on non-vowel detection": 1.0,
                "list": 1.0,
                "reuse of previously computed results": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-conditionals-functions-easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "iteration with conditional checks": 1.0,
                "inline conditional check": 1.0,
                "array": 3.0,
                "linear search": 1.0,
                "early return for empty array": 1.0,
                "iteration and conditional filtering": 1.0,
                "early return for empty input": 1.0,
                "string manipulation": 1.0,
                "in-place filtering and transformation": 1.0,
                "string": 1.0,
                "iteration with conditionals": 1.0,
                "list": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-error_handling-easy": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "conditional logic": 3.0,
                "primitive types": 2.0,
                "conditional checks": 2.0,
                "short-circuit evaluation": 1.0,
                "string": 1.0,
                "primitive data types": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-conditionals-error_handling-searching-easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "linear search": 3.0,
                "early exit with 'any' function": 1.0,
                "list": 4.0,
                "simple iteration": 1.0,
                "early return for empty list": 1.0,
                "set data structure for uniqueness check": 1.0,
                "using set to leverage O(1) average time complexity for membership checks": 1.0,
                "set": 1.0,
                "early exit upon finding the first positive number": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 1.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-conditionals-loops-easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "iteration with condition checking": 1.0,
                "use of set for O(1) membership checking": 1.0,
                "set": 1.0,
                "iteration with filtering": 1.0,
                "generator expression for efficient filtering and summation": 1.0,
                "list": 3.0,
                "linear search": 1.0,
                "generator expression": 1.0,
                "filtering and counting": 1.0,
                "list comprehension": 1.0,
                "string manipulation": 1.0,
                "slicing": 1.0,
                "string": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "loops-recursion-searching-medium": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "recursion": 1.0,
                "recursive depth-first traversal": 1.0,
                "list": 2.0,
                "recursive backtracking": 1.0,
                "pruning": 1.0,
                "early termination": 1.0,
                "2D array": 1.0,
                "backtracking": 1.0,
                "recursive exploration": 1.0,
                "pruning invalid paths": 1.0,
                "sliding window": 1.0,
                "character counting": 1.0,
                "dictionary": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-conditionals-functions-loops-easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "iteration with conditional logic": 1.0,
                "list comprehension": 2.0,
                "list": 4.0,
                "single pass separation": 1.0,
                "iteration and conditional checks": 1.0,
                "early return is not applicable": 1.0,
                "minimal use of additional data structures": 1.0,
                "dictionary": 1.0,
                "iteration and conditional summation": 1.0,
                "single pass through the list": 1.0,
                "iteration": 1.0,
                "early return for empty list": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 1.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "error_handling-recursion-searching-sorting-easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "recursive binary search": 1.0,
                "divide and conquer": 2.0,
                "array": 1.0,
                "recursive approach": 1.0,
                "list": 4.0,
                "recursive count": 1.0,
                "list comprehension": 1.0,
                "recursive search": 1.0,
                "recursive divide and conquer": 1.0,
                "divide array into halves": 1.0,
                "recursive accumulation": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "error_handling-loops-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "iteration and conditional filtering": 1.0,
                "list": 2.0,
                "iteration and filtering": 1.0,
                "early return for empty input": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "loops-searching-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "linear search": 3.0,
                "use of built-in function": 2.0,
                "list": 5.0,
                "list comprehension": 1.0,
                "simple traversal": 1.0,
                "short-circuit evaluation": 1.0,
                "simple aggregation": 1.0,
                "built-in function usage": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-error_handling-very easy": {
            "success_rate": 0.8,
            "avg_attempts": 3.0,
            "patterns": {
                "conditional logic": 2.0,
                "early return for error handling": 2.0,
                "conditional statements": 2.0,
                "early return for invalid input": 1.0,
                "conditional checks": 1.0,
                "list": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-recursion-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "conditional check": 1.0,
                "recursion": 4.0,
                "tail recursion not utilized": 1.0,
                "integers": 1.0,
                "base case to prevent infinite recursion": 1.0,
                "none": 1.0,
                "tail recursion not optimized in Python": 1.0,
                "string": 1.0,
                "divide and conquer": 1.0,
                "list": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-dynamic_programming-very easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 5.0,
                "iterative approach": 1.0,
                "space optimization using a single array": 1.0,
                "array": 2.0,
                "bottom-up approach": 3.0,
                "2D array": 2.0,
                "memoization": 1.0,
                "dictionary": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 1.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-functions-very easy": {
            "success_rate": 0.4,
            "avg_attempts": 3.0,
            "patterns": {
                "iteration and conditional checking": 1.0,
                "case normalization": 2.0,
                "string": 3.0,
                "two-pointer technique": 2.0,
                "in-place modification": 1.0,
                "list": 1.0,
                "iteration over string representation": 1.0,
                "direct iteration over string": 1.0,
                "in-place character comparison": 1.0,
                "frequency counting": 1.0,
                "dictionary": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "functions-searching-very easy": {
            "success_rate": 0.8,
            "avg_attempts": 3.0,
            "patterns": {
                "linear search": 4.0,
                "input validation": 1.0,
                "range filtering": 1.0,
                "list": 1.0,
                "array": 3.0,
                "early initialization": 1.0,
                "early exit upon condition met": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "data_structures-dynamic_programming-very easy": {
            "success_rate": 0.4,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 3.0,
                "iterative approach": 2.0,
                "storing intermediate results": 1.0,
                "array": 3.0,
                "tabulation": 1.0,
                "bottom-up approach": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-recursion-very easy": {
            "success_rate": 0.6,
            "avg_attempts": 3.0,
            "patterns": {
                "recursion": 5.0,
                "divide and conquer": 2.0,
                "integer": 2.0,
                "base case optimization": 1.0,
                "string": 2.0,
                "tail recursion not utilized": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 1.0,
                "implementation_patterns": 0.0
            }
        },
        "error_handling-searching-very easy": {
            "success_rate": 0.8,
            "avg_attempts": 3.0,
            "patterns": {
                "binary search": 2.0,
                "divide and conquer": 2.0,
                "array": 3.0,
                "linear search": 3.0,
                "early exit on match": 1.0,
                "list": 1.0,
                "early exit upon finding target": 1.0,
                "string": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "data_structures-error_handling-easy": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "object-oriented design": 1.0,
                "direct list operations for stack management": 1.0,
                "list": 4.0,
                "queue operations": 1.0,
                "sorting-based priority queue": 1.0,
                "sorting on insertion": 1.0,
                "sequential processing": 1.0,
                "early return in remove and get operations": 1.0,
                "dictionary operations": 1.0,
                "direct dictionary access for O(1) complexity": 1.0,
                "dictionary": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "conditionals-error_handling-recursion-very easy": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "recursion": 2.0,
                "primitive data types": 1.0,
                "list": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-dynamic_programming-error_handling-loops-easy": {
            "success_rate": 0.2,
            "avg_attempts": 3.0,
            "patterns": {
                "iterative approach": 4.0,
                "space optimization by using constant space": 1.0,
                "variables": 3.0,
                "dynamic programming": 4.0,
                "space optimization by using two variables": 1.0,
                "iterative table filling": 1.0,
                "2D array": 1.0,
                "space optimization by using two variables instead of an array": 1.0,
                "array": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 3.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-data_structures-dynamic_programming-sorting-hard": {
            "success_rate": 0.0,
            "avg_attempts": 3.0,
            "patterns": {
                "dynamic programming": 3.0,
                "iterative approach": 1.0,
                "space optimization by using variables instead of arrays": 1.0,
                "variables": 1.0,
                "tracking previous elements for reconstruction": 1.0,
                "array": 1.0,
                "sweep line algorithm": 1.0,
                "sorting": 1.0,
                "event-based processing": 1.0,
                "list": 1.0,
                "iterative computation": 1.0,
                "2D array": 1.0,
                "monotonic stack": 1.0,
                "single pass": 1.0,
                "stack-based approach": 1.0,
                "stack": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 1.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 1.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-data_structures-functions-very easy": {
            "success_rate": 0.8,
            "avg_attempts": 3.0,
            "patterns": {
                "iterative summation": 1.0,
                "array": 3.0,
                "iteration": 2.0,
                "linear search": 1.0,
                "single pass": 1.0,
                "string": 2.0,
                "two-pointer technique": 1.0,
                "early exit on mismatch": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 0.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        },
        "algorithms-data_structures-functions-easy": {
            "success_rate": 0.4,
            "avg_attempts": 3.0,
            "patterns": {
                "set-based uniqueness check": 1.0,
                "use of set to eliminate duplicates": 1.0,
                "set": 2.0,
                "hashing": 1.0,
                "sorting for key generation": 1.0,
                "dictionary": 1.0,
                "set data structure for uniqueness": 1.0,
                "use of set to eliminate duplicates efficiently": 1.0,
                "two-pointer technique": 1.0,
                "in-place merging": 1.0,
                "array": 1.0,
                "recursive palindrome check": 1.0,
                "string cleaning": 1.0,
                "recursive comparison": 1.0,
                "string": 1.0
            },
            "pattern_distribution": {
                "algorithmic_patterns": 0.0,
                "data_structure_patterns": 1.0,
                "optimization_patterns": 0.0,
                "implementation_patterns": 0.0
            }
        }
    },
    "pattern_distributions": {
        "dynamic_programming-loops": {
            "dynamic programming": 3.5,
            "iterative approach": 3.5,
            "constant space optimization": 2.0,
            "variables": 2.0,
            "array": 2.5,
            "space optimization using a single array": 1.0,
            "bottom-up approach": 1.0,
            "tabulation": 2.0,
            "iterative dynamic programming": 1.0,
            "list": 1.0,
            "2D array": 1.0,
            "mathematical formula": 1.0,
            "use of arithmetic series formula": 1.0
        },
        "conditionals-data_structures": {
            "set operations": 1.0,
            "use of set for O(1) average time complexity lookups": 1.0,
            "set": 1.0,
            "simple search": 1.0,
            "early exit using 'in' operator": 1.0,
            "list": 4.0,
            "linear search": 3.0,
            "early exit with 'in' operator": 1.0,
            "list comprehension": 1.0,
            "early exit": 1.0
        },
        "algorithms-conditionals": {
            "conditional check": 1.0,
            "conditional logic": 1.0,
            "ternary conditional operator": 1.0,
            "conditional branching": 1.0,
            "ternary conditional expressions": 1.0,
            "direct mapping": 1.0,
            "index-based access": 1.0,
            "list": 1.0,
            "conditional statements": 1.0,
            "none required for simple conditionals": 1.0,
            "none": 1.0
        },
        "conditionals-sorting": {
            "sorting and filtering": 1.0,
            "list comprehension for concise filtering": 1.0,
            "list": 5.0,
            "sorting and slicing": 1.0,
            "set for uniqueness": 1.0,
            "set": 2.0,
            "sorting and partitioning": 1.0,
            "set for duplicate removal": 1.0,
            "list slicing for partitioning": 1.0,
            "custom sorting": 1.0,
            "dictionary mapping for sorting": 1.0,
            "dictionary": 1.0,
            "sorting and categorization": 1.0,
            "list comprehension for filtering": 1.0
        },
        "functions-sorting": {
            "element-wise transformation followed by sorting": 1.0,
            "list comprehension for concise element transformation": 1.0,
            "list": 5.0,
            "sorting": 3.5,
            "use of built-in sort function": 1.0,
            "stable sort": 1.0,
            "utilizing built-in functions": 1.0,
            "use of key function for custom sorting": 1.0,
            "transformation and sorting": 1.0,
            "list comprehension": 1.0,
            "stable sorting": 1.0,
            "built-in sort function": 1.0,
            "set for uniqueness and sorting": 1.0,
            "use of set for uniqueness": 1.0,
            "set": 1.0
        },
        "dynamic_programming-functions": {
            "iterative dynamic programming": 1.0,
            "iterative approach": 3.0,
            "list": 1.0,
            "dynamic programming": 4.0,
            "tabulation": 1.0,
            "array": 1.5,
            "bottom-up approach": 2.0,
            "2D array": 1.5,
            "space optimization by using variables instead of arrays": 1.0,
            "variables": 1.0,
            "combinatorial mathematics": 1.0,
            "direct computation using combinatorial formula": 1.0
        },
        "algorithms-error_handling": {
            "linear search": 1.0,
            "list": 3.0,
            "simple iteration": 1.0,
            "use of built-in max function": 1.0,
            "validation and arithmetic calculation": 1.0,
            "early validation to avoid unnecessary computation": 1.0,
            "filtering and counting": 1.0,
            "list comprehension": 1.0,
            "input validation and string concatenation": 1.0,
            "early validation to prevent unnecessary processing": 1.0,
            "conditional checks": 1.0,
            "early return for error handling": 1.0,
            "primitive data types": 1.0,
            "type checking": 1.0,
            "early return": 1.0,
            "string": 1.0,
            "type checking and conditional logic": 1.0,
            "primitive types": 2.0,
            "input validation and arithmetic calculation": 1.0,
            "simple arithmetic conversion": 1.0,
            "direct calculation": 1.0
        },
        "algorithms-dynamic_programming": {
            "dynamic programming": 4.0,
            "iterative bottom-up approach": 1.0,
            "array": 4.0,
            "iterative approach": 1.0,
            "Kadane's algorithm": 1.0,
            "iterative update": 1.0,
            "single pass": 1.0,
            "tabulation": 2.0,
            "2D array": 1.0
        },
        "error_handling-recursion": {
            "recursion": 5.0,
            "base case optimization": 1.0,
            "none": 1.0,
            "base case to terminate recursion": 1.0,
            "integer": 3.0,
            "divide and conquer": 2.0,
            "string": 1.0,
            "tail recursion": 1.0
        },
        "recursion-sorting": {
            "recursion": 3.0,
            "array": 4.0,
            "none": 1.0,
            "early return": 1.0,
            "divide and conquer": 3.0,
            "list": 3.0,
            "recursive approach": 1.0,
            "recursive quicksort": 4.0,
            "quick sort (recursive)": 1.0
        },
        "recursion-searching": {
            "recursion": 4.5,
            "tail recursion": 2.0,
            "string": 2.0,
            "recursive linear search": 1.0,
            "none": 1.0,
            "array": 6.0,
            "divide and conquer": 4.5,
            "list": 3.0,
            "binary search": 3.0,
            "recursive approach": 2.0,
            "recursive binary search": 1.0
        },
        "dynamic_programming-recursion": {
            "dynamic programming": 5.0,
            "bottom-up approach": 2.0,
            "array": 3.0,
            "iterative approach": 1.0,
            "bottom-up dynamic programming": 1.0,
            "tabulation": 2.0,
            "2D array": 2.0
        },
        "searching-sorting": {
            "binary search": 1.0,
            "divide and conquer": 1.0,
            "array": 3.0,
            "direct access": 1.0,
            "leveraging sorted property": 1.0,
            "linear search": 1.0,
            "set conversion": 1.0,
            "set data structure for duplicate removal": 1.0,
            "set": 1.0,
            "simple merge and sort": 1.0,
            "none": 1.0,
            "list": 1.0
        },
        "dynamic_programming-sorting": {
            "sorting and pairing": 1.0,
            "sorting to maximize cost efficiency": 1.0,
            "list": 4.0,
            "sorting and linear search": 1.0,
            "built-in sort function": 1.0,
            "iterative traversal": 1.0,
            "single pass": 1.0,
            "array": 1.0,
            "sorting": 1.0,
            "sorting and set utilization": 1.0,
            "use of set to filter unique elements": 1.0,
            "set": 1.0
        },
        "error_handling-functions-sorting": {
            "filter and sort": 1.0,
            "early validation and filtering": 1.0,
            "list": 5.0,
            "filtering and set operations": 1.0,
            "set for uniqueness": 1.0,
            "list comprehension for filtering": 1.0,
            "set": 1.0,
            "iteration and filtering": 1.0,
            "early exit for invalid data": 1.0,
            "sorting": 1.0,
            "tuple": 2.0,
            "filtering and sorting": 1.0,
            "lambda function for sorting": 1.0
        },
        "algorithms-conditionals-error_handling": {
            "conditional logic": 2.0,
            "direct condition checks": 1.0,
            "none": 1.0,
            "conditional statements": 2.0,
            "conditional checks": 1.0,
            "primitive data types": 1.0
        },
        "loops-sorting": {
            "binary search with dynamic programming": 1.0,
            "binary search for insertion point": 1.0,
            "use of a dynamic list to track subsequence lengths": 1.0,
            "list": 4.0,
            "greedy approach": 1.0,
            "early termination": 1.0,
            "incremental updates": 1.0,
            "array": 1.0,
            "modified merge sort": 1.0,
            "divide and conquer": 1.0,
            "inversion counting during merge": 1.0,
            "sorting and selection": 1.0,
            "sorting for median calculation": 1.0,
            "sorting for closest elements selection": 1.0,
            "custom sorting": 1.0,
            "use of set for uniqueness": 1.0,
            "set": 1.0
        },
        "algorithms-loops": {
            "iteration and filtering": 1.0,
            "list comprehension": 1.0,
            "list": 5.0,
            "filter and accumulate": 1.0,
            "generator expression": 1.0,
            "iteration": 1.0,
            "linear search": 1.0,
            "early initialization of max_num": 1.0,
            "counting": 1.0,
            "built-in function usage": 1.0
        },
        "data_structures-dynamic_programming-searching": {
            "dynamic programming": 3.0,
            "iterative approach": 3.0,
            "array": 4.0,
            "iterative dynamic programming": 1.0,
            "tabulation": 1.0,
            "iterative filtering": 1.0,
            "early exit on non-vowel detection": 1.0,
            "list": 1.0,
            "reuse of previously computed results": 1.0
        },
        "algorithms-conditionals-functions": {
            "iteration with conditional checks": 1.0,
            "inline conditional check": 1.0,
            "array": 3.0,
            "linear search": 1.0,
            "early return for empty array": 1.0,
            "iteration and conditional filtering": 1.0,
            "early return for empty input": 1.0,
            "string manipulation": 1.0,
            "in-place filtering and transformation": 1.0,
            "string": 1.0,
            "iteration with conditionals": 1.0,
            "list": 1.0
        },
        "conditionals-error_handling": {
            "conditional logic": 2.5,
            "primitive types": 2.0,
            "conditional checks": 1.5,
            "short-circuit evaluation": 1.0,
            "string": 1.0,
            "primitive data types": 1.0,
            "early return for error handling": 2.0,
            "conditional statements": 2.0,
            "early return for invalid input": 1.0,
            "list": 1.0
        },
        "algorithms-conditionals-error_handling-searching": {
            "linear search": 3.0,
            "early exit with 'any' function": 1.0,
            "list": 4.0,
            "simple iteration": 1.0,
            "early return for empty list": 1.0,
            "set data structure for uniqueness check": 1.0,
            "using set to leverage O(1) average time complexity for membership checks": 1.0,
            "set": 1.0,
            "early exit upon finding the first positive number": 1.0
        },
        "algorithms-conditionals-loops": {
            "iteration with condition checking": 1.0,
            "use of set for O(1) membership checking": 1.0,
            "set": 1.0,
            "iteration with filtering": 1.0,
            "generator expression for efficient filtering and summation": 1.0,
            "list": 3.0,
            "linear search": 1.0,
            "generator expression": 1.0,
            "filtering and counting": 1.0,
            "list comprehension": 1.0,
            "string manipulation": 1.0,
            "slicing": 1.0,
            "string": 1.0
        },
        "loops-recursion-searching": {
            "recursion": 1.0,
            "recursive depth-first traversal": 1.0,
            "list": 2.0,
            "recursive backtracking": 1.0,
            "pruning": 1.0,
            "early termination": 1.0,
            "2D array": 1.0,
            "backtracking": 1.0,
            "recursive exploration": 1.0,
            "pruning invalid paths": 1.0,
            "sliding window": 1.0,
            "character counting": 1.0,
            "dictionary": 1.0
        },
        "algorithms-conditionals-functions-loops": {
            "iteration with conditional logic": 1.0,
            "list comprehension": 2.0,
            "list": 4.0,
            "single pass separation": 1.0,
            "iteration and conditional checks": 1.0,
            "early return is not applicable": 1.0,
            "minimal use of additional data structures": 1.0,
            "dictionary": 1.0,
            "iteration and conditional summation": 1.0,
            "single pass through the list": 1.0,
            "iteration": 1.0,
            "early return for empty list": 1.0
        },
        "error_handling-recursion-searching-sorting": {
            "recursive binary search": 1.0,
            "divide and conquer": 2.0,
            "array": 1.0,
            "recursive approach": 1.0,
            "list": 4.0,
            "recursive count": 1.0,
            "list comprehension": 1.0,
            "recursive search": 1.0,
            "recursive divide and conquer": 1.0,
            "divide array into halves": 1.0,
            "recursive accumulation": 1.0
        },
        "error_handling-loops": {
            "iteration and conditional filtering": 1.0,
            "list": 2.0,
            "iteration and filtering": 1.0,
            "early return for empty input": 1.0
        },
        "loops-searching": {
            "linear search": 3.0,
            "use of built-in function": 2.0,
            "list": 5.0,
            "list comprehension": 1.0,
            "simple traversal": 1.0,
            "short-circuit evaluation": 1.0,
            "simple aggregation": 1.0,
            "built-in function usage": 1.0
        },
        "conditionals-recursion": {
            "conditional check": 1.0,
            "recursion": 4.0,
            "tail recursion not utilized": 1.0,
            "integers": 1.0,
            "base case to prevent infinite recursion": 1.0,
            "none": 1.0,
            "tail recursion not optimized in Python": 1.0,
            "string": 1.0,
            "divide and conquer": 1.0,
            "list": 1.0
        },
        "conditionals-dynamic_programming": {
            "dynamic programming": 5.0,
            "iterative approach": 1.0,
            "space optimization using a single array": 1.0,
            "array": 2.0,
            "bottom-up approach": 3.0,
            "2D array": 2.0,
            "memoization": 1.0,
            "dictionary": 1.0
        },
        "algorithms-functions": {
            "iteration and conditional checking": 1.0,
            "case normalization": 2.0,
            "string": 3.0,
            "two-pointer technique": 2.0,
            "in-place modification": 1.0,
            "list": 1.0,
            "iteration over string representation": 1.0,
            "direct iteration over string": 1.0,
            "in-place character comparison": 1.0,
            "frequency counting": 1.0,
            "dictionary": 1.0
        },
        "functions-searching": {
            "linear search": 4.0,
            "input validation": 1.0,
            "range filtering": 1.0,
            "list": 1.0,
            "array": 3.0,
            "early initialization": 1.0,
            "early exit upon condition met": 1.0
        },
        "data_structures-dynamic_programming": {
            "dynamic programming": 3.0,
            "iterative approach": 2.0,
            "storing intermediate results": 1.0,
            "array": 3.0,
            "tabulation": 1.0,
            "bottom-up approach": 1.0
        },
        "algorithms-recursion": {
            "recursion": 5.0,
            "divide and conquer": 2.0,
            "integer": 2.0,
            "base case optimization": 1.0,
            "string": 2.0,
            "tail recursion not utilized": 1.0
        },
        "error_handling-searching": {
            "binary search": 2.0,
            "divide and conquer": 2.0,
            "array": 3.0,
            "linear search": 3.0,
            "early exit on match": 1.0,
            "list": 1.0,
            "early exit upon finding target": 1.0,
            "string": 1.0
        },
        "data_structures-error_handling": {
            "object-oriented design": 1.0,
            "direct list operations for stack management": 1.0,
            "list": 4.0,
            "queue operations": 1.0,
            "sorting-based priority queue": 1.0,
            "sorting on insertion": 1.0,
            "sequential processing": 1.0,
            "early return in remove and get operations": 1.0,
            "dictionary operations": 1.0,
            "direct dictionary access for O(1) complexity": 1.0,
            "dictionary": 1.0
        },
        "conditionals-error_handling-recursion": {
            "recursion": 2.0,
            "primitive data types": 1.0,
            "list": 1.0
        },
        "algorithms-dynamic_programming-error_handling-loops": {
            "iterative approach": 4.0,
            "space optimization by using constant space": 1.0,
            "variables": 3.0,
            "dynamic programming": 4.0,
            "space optimization by using two variables": 1.0,
            "iterative table filling": 1.0,
            "2D array": 1.0,
            "space optimization by using two variables instead of an array": 1.0,
            "array": 1.0
        },
        "algorithms-data_structures-dynamic_programming-sorting": {
            "dynamic programming": 3.0,
            "iterative approach": 1.0,
            "space optimization by using variables instead of arrays": 1.0,
            "variables": 1.0,
            "tracking previous elements for reconstruction": 1.0,
            "array": 1.0,
            "sweep line algorithm": 1.0,
            "sorting": 1.0,
            "event-based processing": 1.0,
            "list": 1.0,
            "iterative computation": 1.0,
            "2D array": 1.0,
            "monotonic stack": 1.0,
            "single pass": 1.0,
            "stack-based approach": 1.0,
            "stack": 1.0
        },
        "algorithms-data_structures-functions": {
            "iterative summation": 1.0,
            "array": 4.0,
            "iteration": 2.0,
            "linear search": 1.0,
            "single pass": 1.0,
            "string": 3.0,
            "two-pointer technique": 2.0,
            "early exit on mismatch": 1.0,
            "set-based uniqueness check": 1.0,
            "use of set to eliminate duplicates": 1.0,
            "set": 2.0,
            "hashing": 1.0,
            "sorting for key generation": 1.0,
            "dictionary": 1.0,
            "set data structure for uniqueness": 1.0,
            "use of set to eliminate duplicates efficiently": 1.0,
            "in-place merging": 1.0,
            "recursive palindrome check": 1.0,
            "string cleaning": 1.0,
            "recursive comparison": 1.0
        }
    }
}